// Generated by FIR Compiler
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
// ************************************************************
// Copyright (C) 1991-2005 Altera Corporation
// Any megafunction design, and related net list (encrypted or decrypted),
// support information, device programming or simulation file, and any other
// associated documentation or information provided by Altera or a partner
// under Altera's Megafunction Partnership Program may be used only to
// program PLD devices (but not masked PLD devices) from Altera.  Any other
// use of such megafunction design, net list, support information, device
// programming or simulation file, or any other related documentation or
// information is prohibited for any other purpose, including, but not
// limited to modification, reverse engineering, de-compiling, or use with
// any other silicon devices, unless such use is explicitly licensed under
// a separate agreement with Altera or a megafunction partner.  Title to
// the intellectual property, including patents, copyrights, trademarks,
// trade secrets, or maskworks, embodied in any such megafunction design,
// net list, support information, device programming or simulation file, or
// any other related documentation or information provided by Altera or a
// megafunction partner, remains with Altera, the megafunction partner, or
// their respective licensors.  No other licenses, including any licenses
// needed under any third party's intellectual property, are provided herein.
// 00
// altera message_off 10036
(* altera_attribute = "-name MESSAGE_DISABLE 15400; -name MESSAGE_DISABLE 14130; -name MESSAGE_DISABLE 10036; -name MESSAGE_DISABLE 12020; -name MESSAGE_DISABLE 12030; -name MESSAGE_DISABLE 12010; -name MESSAGE_DISABLE 12110; -name MESSAGE_DISABLE 14320; -name MESSAGE_DISABLE 13410" *)
module fir32tap_old_st (clk, 
              rst, 
              data_in, 
              clk_en, 
              coef_set, 
              rdy_to_ld, 
              done, 
              input_ch_id, 
              output_ch_id, 
              fir_result); 
parameter DATA_WIDTH  = 24;
parameter COEF_WIDTH  = 14;
parameter COEF_SET_WIDTH = 2;
parameter ACCUM_WIDTH = 40;

parameter CH_WIDTH = 2;
input clk, rst;
input [DATA_WIDTH-1:0] data_in;
input clk_en;
input [COEF_SET_WIDTH-1:0] coef_set; 
output [CH_WIDTH -1:0] input_ch_id; 
output [CH_WIDTH -1:0] output_ch_id; 
output rdy_to_ld;
wire rdy_to_ld;
wire rdy_int;
wire data_ld;
output done;
wire done;
wire done_int;
output [ACCUM_WIDTH-1:0] fir_result;
wire addr_low;
assign addr_low = 1'b0;
wire [COEF_SET_WIDTH-1 :0]coef_set_dly;
delay_trig_cen coef_set_reg(.clk(clk),.gclk_en(clk_en),.enable(1'b1), .data_in(coef_set),.data_out(coef_set_dly));
defparam coef_set_reg.IN_WIDTH = COEF_SET_WIDTH;
defparam coef_set_reg.WHOLE_DELAY = 1;
defparam coef_set_reg.FINE_DELAY = 2;


//--- Parallel TDL Storage ---
wire inv_rst;
assign inv_rst = ~rst;
assign data_ld = rdy_int;
wire [23:0] tdl_0_n;
wire [23:0] tdl_1_n;
wire [23:0] tdl_2_n;
wire [23:0] tdl_3_n;
wire [23:0] tdl_4_n;
wire [23:0] tdl_5_n;
wire [23:0] tdl_6_n;
wire [23:0] tdl_7_n;
wire [23:0] tdl_8_n;
wire [23:0] tdl_9_n;
wire [23:0] tdl_10_n;
wire [23:0] tdl_11_n;
wire [23:0] tdl_12_n;


//--- TDL  ---
msft_mem tdl_ff_0_n(.rst(rst), .clk(clk), .clk_en(clk_en), .we(data_ld),.data_in(data_in),.data_out(tdl_0_n));
defparam tdl_ff_0_n.WIDTH = 24;
defparam tdl_ff_0_n.LENGTH = 3;
defparam tdl_ff_0_n.ADDR_WIDTH = 2;
defparam tdl_ff_0_n.READ_ST = 3;
defparam tdl_ff_0_n.MEM_CORE = "AUTO";
defparam tdl_ff_0_n.INIT_FILE = "fir32tap_old_zero.hex";
msft_mem tdl_ff_1_n(.rst(rst), .clk(clk), .clk_en(clk_en), .we(data_ld),.data_in(tdl_0_n),.data_out(tdl_1_n));
defparam tdl_ff_1_n.WIDTH = 24;
defparam tdl_ff_1_n.LENGTH = 3;
defparam tdl_ff_1_n.ADDR_WIDTH = 2;
defparam tdl_ff_1_n.READ_ST = 3;
defparam tdl_ff_1_n.MEM_CORE = "AUTO";
defparam tdl_ff_1_n.INIT_FILE = "fir32tap_old_zero.hex";
msft_mem tdl_ff_2_n(.rst(rst), .clk(clk), .clk_en(clk_en), .we(data_ld),.data_in(tdl_1_n),.data_out(tdl_2_n));
defparam tdl_ff_2_n.WIDTH = 24;
defparam tdl_ff_2_n.LENGTH = 3;
defparam tdl_ff_2_n.ADDR_WIDTH = 2;
defparam tdl_ff_2_n.READ_ST = 3;
defparam tdl_ff_2_n.MEM_CORE = "AUTO";
defparam tdl_ff_2_n.INIT_FILE = "fir32tap_old_zero.hex";
msft_mem tdl_ff_3_n(.rst(rst), .clk(clk), .clk_en(clk_en), .we(data_ld),.data_in(tdl_2_n),.data_out(tdl_3_n));
defparam tdl_ff_3_n.WIDTH = 24;
defparam tdl_ff_3_n.LENGTH = 3;
defparam tdl_ff_3_n.ADDR_WIDTH = 2;
defparam tdl_ff_3_n.READ_ST = 3;
defparam tdl_ff_3_n.MEM_CORE = "AUTO";
defparam tdl_ff_3_n.INIT_FILE = "fir32tap_old_zero.hex";
msft_mem tdl_ff_4_n(.rst(rst), .clk(clk), .clk_en(clk_en), .we(data_ld),.data_in(tdl_3_n),.data_out(tdl_4_n));
defparam tdl_ff_4_n.WIDTH = 24;
defparam tdl_ff_4_n.LENGTH = 3;
defparam tdl_ff_4_n.ADDR_WIDTH = 2;
defparam tdl_ff_4_n.READ_ST = 3;
defparam tdl_ff_4_n.MEM_CORE = "AUTO";
defparam tdl_ff_4_n.INIT_FILE = "fir32tap_old_zero.hex";
msft_mem tdl_ff_5_n(.rst(rst), .clk(clk), .clk_en(clk_en), .we(data_ld),.data_in(tdl_4_n),.data_out(tdl_5_n));
defparam tdl_ff_5_n.WIDTH = 24;
defparam tdl_ff_5_n.LENGTH = 3;
defparam tdl_ff_5_n.ADDR_WIDTH = 2;
defparam tdl_ff_5_n.READ_ST = 3;
defparam tdl_ff_5_n.MEM_CORE = "AUTO";
defparam tdl_ff_5_n.INIT_FILE = "fir32tap_old_zero.hex";
msft_mem tdl_ff_6_n(.rst(rst), .clk(clk), .clk_en(clk_en), .we(data_ld),.data_in(tdl_5_n),.data_out(tdl_6_n));
defparam tdl_ff_6_n.WIDTH = 24;
defparam tdl_ff_6_n.LENGTH = 3;
defparam tdl_ff_6_n.ADDR_WIDTH = 2;
defparam tdl_ff_6_n.READ_ST = 3;
defparam tdl_ff_6_n.MEM_CORE = "AUTO";
defparam tdl_ff_6_n.INIT_FILE = "fir32tap_old_zero.hex";
msft_mem tdl_ff_7_n(.rst(rst), .clk(clk), .clk_en(clk_en), .we(data_ld),.data_in(tdl_6_n),.data_out(tdl_7_n));
defparam tdl_ff_7_n.WIDTH = 24;
defparam tdl_ff_7_n.LENGTH = 3;
defparam tdl_ff_7_n.ADDR_WIDTH = 2;
defparam tdl_ff_7_n.READ_ST = 3;
defparam tdl_ff_7_n.MEM_CORE = "AUTO";
defparam tdl_ff_7_n.INIT_FILE = "fir32tap_old_zero.hex";
msft_mem tdl_ff_8_n(.rst(rst), .clk(clk), .clk_en(clk_en), .we(data_ld),.data_in(tdl_7_n),.data_out(tdl_8_n));
defparam tdl_ff_8_n.WIDTH = 24;
defparam tdl_ff_8_n.LENGTH = 3;
defparam tdl_ff_8_n.ADDR_WIDTH = 2;
defparam tdl_ff_8_n.READ_ST = 3;
defparam tdl_ff_8_n.MEM_CORE = "AUTO";
defparam tdl_ff_8_n.INIT_FILE = "fir32tap_old_zero.hex";
msft_mem tdl_ff_9_n(.rst(rst), .clk(clk), .clk_en(clk_en), .we(data_ld),.data_in(tdl_8_n),.data_out(tdl_9_n));
defparam tdl_ff_9_n.WIDTH = 24;
defparam tdl_ff_9_n.LENGTH = 3;
defparam tdl_ff_9_n.ADDR_WIDTH = 2;
defparam tdl_ff_9_n.READ_ST = 3;
defparam tdl_ff_9_n.MEM_CORE = "AUTO";
defparam tdl_ff_9_n.INIT_FILE = "fir32tap_old_zero.hex";
msft_mem tdl_ff_10_n(.rst(rst), .clk(clk), .clk_en(clk_en), .we(data_ld),.data_in(tdl_9_n),.data_out(tdl_10_n));
defparam tdl_ff_10_n.WIDTH = 24;
defparam tdl_ff_10_n.LENGTH = 3;
defparam tdl_ff_10_n.ADDR_WIDTH = 2;
defparam tdl_ff_10_n.READ_ST = 3;
defparam tdl_ff_10_n.MEM_CORE = "AUTO";
defparam tdl_ff_10_n.INIT_FILE = "fir32tap_old_zero.hex";
msft_mem tdl_ff_11_n(.rst(rst), .clk(clk), .clk_en(clk_en), .we(data_ld),.data_in(tdl_10_n),.data_out(tdl_11_n));
defparam tdl_ff_11_n.WIDTH = 24;
defparam tdl_ff_11_n.LENGTH = 3;
defparam tdl_ff_11_n.ADDR_WIDTH = 2;
defparam tdl_ff_11_n.READ_ST = 3;
defparam tdl_ff_11_n.MEM_CORE = "AUTO";
defparam tdl_ff_11_n.INIT_FILE = "fir32tap_old_zero.hex";
msft_mem tdl_ff_12_n(.rst(rst), .clk(clk), .clk_en(clk_en), .we(data_ld),.data_in(tdl_11_n),.data_out(tdl_12_n));
defparam tdl_ff_12_n.WIDTH = 24;
defparam tdl_ff_12_n.LENGTH = 3;
defparam tdl_ff_12_n.ADDR_WIDTH = 2;
defparam tdl_ff_12_n.READ_ST = 3;
defparam tdl_ff_12_n.MEM_CORE = "AUTO";
defparam tdl_ff_12_n.INIT_FILE = "fir32tap_old_zero.hex";


// --- ROM LUTs ---- 
wire [14:0] lut_val_0_n_0_pp;
ram_lut_cen Ur0_n_0_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_5_n[0],tdl_4_n[0],tdl_3_n[0],tdl_2_n[0],tdl_1_n[0],tdl_0_n[0] } ), .wr_en(1'b0),.data_out( lut_val_0_n_0_pp[13:0]) ) ;
defparam Ur0_n_0_pp.device_family = "CYCLONEIII";
defparam Ur0_n_0_pp.init_file = "fir32tap_old_coef_0.hex";
defparam Ur0_n_0_pp.data_width = 14;
defparam Ur0_n_0_pp.addr_width = 8;
defparam Ur0_n_0_pp.depth = 192;
defparam Ur0_n_0_pp.mem_core = "M4K";
assign lut_val_0_n_0_pp[14] = lut_val_0_n_0_pp[13];
wire [14:0] lut_val_0_n_1_pp;
ram_lut_cen Ur0_n_1_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_5_n[1],tdl_4_n[1],tdl_3_n[1],tdl_2_n[1],tdl_1_n[1],tdl_0_n[1] } ), .wr_en(1'b0),.data_out( lut_val_0_n_1_pp[13:0]) ) ;
defparam Ur0_n_1_pp.device_family = "CYCLONEIII";
defparam Ur0_n_1_pp.init_file = "fir32tap_old_coef_0.hex";
defparam Ur0_n_1_pp.data_width = 14;
defparam Ur0_n_1_pp.addr_width = 8;
defparam Ur0_n_1_pp.depth = 192;
defparam Ur0_n_1_pp.mem_core = "M4K";
assign lut_val_0_n_1_pp[14] = lut_val_0_n_1_pp[13];
wire [14:0] lut_val_0_n_2_pp;
ram_lut_cen Ur0_n_2_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_5_n[2],tdl_4_n[2],tdl_3_n[2],tdl_2_n[2],tdl_1_n[2],tdl_0_n[2] } ), .wr_en(1'b0),.data_out( lut_val_0_n_2_pp[13:0]) ) ;
defparam Ur0_n_2_pp.device_family = "CYCLONEIII";
defparam Ur0_n_2_pp.init_file = "fir32tap_old_coef_0.hex";
defparam Ur0_n_2_pp.data_width = 14;
defparam Ur0_n_2_pp.addr_width = 8;
defparam Ur0_n_2_pp.depth = 192;
defparam Ur0_n_2_pp.mem_core = "M4K";
assign lut_val_0_n_2_pp[14] = lut_val_0_n_2_pp[13];
wire [14:0] lut_val_0_n_3_pp;
ram_lut_cen Ur0_n_3_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_5_n[3],tdl_4_n[3],tdl_3_n[3],tdl_2_n[3],tdl_1_n[3],tdl_0_n[3] } ), .wr_en(1'b0),.data_out( lut_val_0_n_3_pp[13:0]) ) ;
defparam Ur0_n_3_pp.device_family = "CYCLONEIII";
defparam Ur0_n_3_pp.init_file = "fir32tap_old_coef_0.hex";
defparam Ur0_n_3_pp.data_width = 14;
defparam Ur0_n_3_pp.addr_width = 8;
defparam Ur0_n_3_pp.depth = 192;
defparam Ur0_n_3_pp.mem_core = "M4K";
assign lut_val_0_n_3_pp[14] = lut_val_0_n_3_pp[13];
wire [14:0] lut_val_0_n_4_pp;
ram_lut_cen Ur0_n_4_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_5_n[4],tdl_4_n[4],tdl_3_n[4],tdl_2_n[4],tdl_1_n[4],tdl_0_n[4] } ), .wr_en(1'b0),.data_out( lut_val_0_n_4_pp[13:0]) ) ;
defparam Ur0_n_4_pp.device_family = "CYCLONEIII";
defparam Ur0_n_4_pp.init_file = "fir32tap_old_coef_0.hex";
defparam Ur0_n_4_pp.data_width = 14;
defparam Ur0_n_4_pp.addr_width = 8;
defparam Ur0_n_4_pp.depth = 192;
defparam Ur0_n_4_pp.mem_core = "M4K";
assign lut_val_0_n_4_pp[14] = lut_val_0_n_4_pp[13];
wire [14:0] lut_val_0_n_5_pp;
ram_lut_cen Ur0_n_5_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_5_n[5],tdl_4_n[5],tdl_3_n[5],tdl_2_n[5],tdl_1_n[5],tdl_0_n[5] } ), .wr_en(1'b0),.data_out( lut_val_0_n_5_pp[13:0]) ) ;
defparam Ur0_n_5_pp.device_family = "CYCLONEIII";
defparam Ur0_n_5_pp.init_file = "fir32tap_old_coef_0.hex";
defparam Ur0_n_5_pp.data_width = 14;
defparam Ur0_n_5_pp.addr_width = 8;
defparam Ur0_n_5_pp.depth = 192;
defparam Ur0_n_5_pp.mem_core = "M4K";
assign lut_val_0_n_5_pp[14] = lut_val_0_n_5_pp[13];
wire [14:0] lut_val_0_n_6_pp;
ram_lut_cen Ur0_n_6_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_5_n[6],tdl_4_n[6],tdl_3_n[6],tdl_2_n[6],tdl_1_n[6],tdl_0_n[6] } ), .wr_en(1'b0),.data_out( lut_val_0_n_6_pp[13:0]) ) ;
defparam Ur0_n_6_pp.device_family = "CYCLONEIII";
defparam Ur0_n_6_pp.init_file = "fir32tap_old_coef_0.hex";
defparam Ur0_n_6_pp.data_width = 14;
defparam Ur0_n_6_pp.addr_width = 8;
defparam Ur0_n_6_pp.depth = 192;
defparam Ur0_n_6_pp.mem_core = "M4K";
assign lut_val_0_n_6_pp[14] = lut_val_0_n_6_pp[13];
wire [14:0] lut_val_0_n_7_pp;
ram_lut_cen Ur0_n_7_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_5_n[7],tdl_4_n[7],tdl_3_n[7],tdl_2_n[7],tdl_1_n[7],tdl_0_n[7] } ), .wr_en(1'b0),.data_out( lut_val_0_n_7_pp[13:0]) ) ;
defparam Ur0_n_7_pp.device_family = "CYCLONEIII";
defparam Ur0_n_7_pp.init_file = "fir32tap_old_coef_0.hex";
defparam Ur0_n_7_pp.data_width = 14;
defparam Ur0_n_7_pp.addr_width = 8;
defparam Ur0_n_7_pp.depth = 192;
defparam Ur0_n_7_pp.mem_core = "M4K";
assign lut_val_0_n_7_pp[14] = lut_val_0_n_7_pp[13];
wire [14:0] lut_val_0_n_8_pp;
ram_lut_cen Ur0_n_8_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_5_n[8],tdl_4_n[8],tdl_3_n[8],tdl_2_n[8],tdl_1_n[8],tdl_0_n[8] } ), .wr_en(1'b0),.data_out( lut_val_0_n_8_pp[13:0]) ) ;
defparam Ur0_n_8_pp.device_family = "CYCLONEIII";
defparam Ur0_n_8_pp.init_file = "fir32tap_old_coef_0.hex";
defparam Ur0_n_8_pp.data_width = 14;
defparam Ur0_n_8_pp.addr_width = 8;
defparam Ur0_n_8_pp.depth = 192;
defparam Ur0_n_8_pp.mem_core = "M4K";
assign lut_val_0_n_8_pp[14] = lut_val_0_n_8_pp[13];
wire [14:0] lut_val_0_n_9_pp;
ram_lut_cen Ur0_n_9_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_5_n[9],tdl_4_n[9],tdl_3_n[9],tdl_2_n[9],tdl_1_n[9],tdl_0_n[9] } ), .wr_en(1'b0),.data_out( lut_val_0_n_9_pp[13:0]) ) ;
defparam Ur0_n_9_pp.device_family = "CYCLONEIII";
defparam Ur0_n_9_pp.init_file = "fir32tap_old_coef_0.hex";
defparam Ur0_n_9_pp.data_width = 14;
defparam Ur0_n_9_pp.addr_width = 8;
defparam Ur0_n_9_pp.depth = 192;
defparam Ur0_n_9_pp.mem_core = "M4K";
assign lut_val_0_n_9_pp[14] = lut_val_0_n_9_pp[13];
wire [14:0] lut_val_0_n_10_pp;
ram_lut_cen Ur0_n_10_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_5_n[10],tdl_4_n[10],tdl_3_n[10],tdl_2_n[10],tdl_1_n[10],tdl_0_n[10] } ), .wr_en(1'b0),.data_out( lut_val_0_n_10_pp[13:0]) ) ;
defparam Ur0_n_10_pp.device_family = "CYCLONEIII";
defparam Ur0_n_10_pp.init_file = "fir32tap_old_coef_0.hex";
defparam Ur0_n_10_pp.data_width = 14;
defparam Ur0_n_10_pp.addr_width = 8;
defparam Ur0_n_10_pp.depth = 192;
defparam Ur0_n_10_pp.mem_core = "M4K";
assign lut_val_0_n_10_pp[14] = lut_val_0_n_10_pp[13];
wire [14:0] lut_val_0_n_11_pp;
ram_lut_cen Ur0_n_11_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_5_n[11],tdl_4_n[11],tdl_3_n[11],tdl_2_n[11],tdl_1_n[11],tdl_0_n[11] } ), .wr_en(1'b0),.data_out( lut_val_0_n_11_pp[13:0]) ) ;
defparam Ur0_n_11_pp.device_family = "CYCLONEIII";
defparam Ur0_n_11_pp.init_file = "fir32tap_old_coef_0.hex";
defparam Ur0_n_11_pp.data_width = 14;
defparam Ur0_n_11_pp.addr_width = 8;
defparam Ur0_n_11_pp.depth = 192;
defparam Ur0_n_11_pp.mem_core = "M4K";
assign lut_val_0_n_11_pp[14] = lut_val_0_n_11_pp[13];
wire [14:0] lut_val_0_n_12_pp;
ram_lut_cen Ur0_n_12_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_5_n[12],tdl_4_n[12],tdl_3_n[12],tdl_2_n[12],tdl_1_n[12],tdl_0_n[12] } ), .wr_en(1'b0),.data_out( lut_val_0_n_12_pp[13:0]) ) ;
defparam Ur0_n_12_pp.device_family = "CYCLONEIII";
defparam Ur0_n_12_pp.init_file = "fir32tap_old_coef_0.hex";
defparam Ur0_n_12_pp.data_width = 14;
defparam Ur0_n_12_pp.addr_width = 8;
defparam Ur0_n_12_pp.depth = 192;
defparam Ur0_n_12_pp.mem_core = "M4K";
assign lut_val_0_n_12_pp[14] = lut_val_0_n_12_pp[13];
wire [14:0] lut_val_0_n_13_pp;
ram_lut_cen Ur0_n_13_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_5_n[13],tdl_4_n[13],tdl_3_n[13],tdl_2_n[13],tdl_1_n[13],tdl_0_n[13] } ), .wr_en(1'b0),.data_out( lut_val_0_n_13_pp[13:0]) ) ;
defparam Ur0_n_13_pp.device_family = "CYCLONEIII";
defparam Ur0_n_13_pp.init_file = "fir32tap_old_coef_0.hex";
defparam Ur0_n_13_pp.data_width = 14;
defparam Ur0_n_13_pp.addr_width = 8;
defparam Ur0_n_13_pp.depth = 192;
defparam Ur0_n_13_pp.mem_core = "M4K";
assign lut_val_0_n_13_pp[14] = lut_val_0_n_13_pp[13];
wire [14:0] lut_val_0_n_14_pp;
ram_lut_cen Ur0_n_14_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_5_n[14],tdl_4_n[14],tdl_3_n[14],tdl_2_n[14],tdl_1_n[14],tdl_0_n[14] } ), .wr_en(1'b0),.data_out( lut_val_0_n_14_pp[13:0]) ) ;
defparam Ur0_n_14_pp.device_family = "CYCLONEIII";
defparam Ur0_n_14_pp.init_file = "fir32tap_old_coef_0.hex";
defparam Ur0_n_14_pp.data_width = 14;
defparam Ur0_n_14_pp.addr_width = 8;
defparam Ur0_n_14_pp.depth = 192;
defparam Ur0_n_14_pp.mem_core = "M4K";
assign lut_val_0_n_14_pp[14] = lut_val_0_n_14_pp[13];
wire [14:0] lut_val_0_n_15_pp;
ram_lut_cen Ur0_n_15_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_5_n[15],tdl_4_n[15],tdl_3_n[15],tdl_2_n[15],tdl_1_n[15],tdl_0_n[15] } ), .wr_en(1'b0),.data_out( lut_val_0_n_15_pp[13:0]) ) ;
defparam Ur0_n_15_pp.device_family = "CYCLONEIII";
defparam Ur0_n_15_pp.init_file = "fir32tap_old_coef_0.hex";
defparam Ur0_n_15_pp.data_width = 14;
defparam Ur0_n_15_pp.addr_width = 8;
defparam Ur0_n_15_pp.depth = 192;
defparam Ur0_n_15_pp.mem_core = "M4K";
assign lut_val_0_n_15_pp[14] = lut_val_0_n_15_pp[13];
wire [14:0] lut_val_0_n_16_pp;
ram_lut_cen Ur0_n_16_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_5_n[16],tdl_4_n[16],tdl_3_n[16],tdl_2_n[16],tdl_1_n[16],tdl_0_n[16] } ), .wr_en(1'b0),.data_out( lut_val_0_n_16_pp[13:0]) ) ;
defparam Ur0_n_16_pp.device_family = "CYCLONEIII";
defparam Ur0_n_16_pp.init_file = "fir32tap_old_coef_0.hex";
defparam Ur0_n_16_pp.data_width = 14;
defparam Ur0_n_16_pp.addr_width = 8;
defparam Ur0_n_16_pp.depth = 192;
defparam Ur0_n_16_pp.mem_core = "M4K";
assign lut_val_0_n_16_pp[14] = lut_val_0_n_16_pp[13];
wire [14:0] lut_val_0_n_17_pp;
ram_lut_cen Ur0_n_17_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_5_n[17],tdl_4_n[17],tdl_3_n[17],tdl_2_n[17],tdl_1_n[17],tdl_0_n[17] } ), .wr_en(1'b0),.data_out( lut_val_0_n_17_pp[13:0]) ) ;
defparam Ur0_n_17_pp.device_family = "CYCLONEIII";
defparam Ur0_n_17_pp.init_file = "fir32tap_old_coef_0.hex";
defparam Ur0_n_17_pp.data_width = 14;
defparam Ur0_n_17_pp.addr_width = 8;
defparam Ur0_n_17_pp.depth = 192;
defparam Ur0_n_17_pp.mem_core = "M4K";
assign lut_val_0_n_17_pp[14] = lut_val_0_n_17_pp[13];
wire [14:0] lut_val_0_n_18_pp;
ram_lut_cen Ur0_n_18_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_5_n[18],tdl_4_n[18],tdl_3_n[18],tdl_2_n[18],tdl_1_n[18],tdl_0_n[18] } ), .wr_en(1'b0),.data_out( lut_val_0_n_18_pp[13:0]) ) ;
defparam Ur0_n_18_pp.device_family = "CYCLONEIII";
defparam Ur0_n_18_pp.init_file = "fir32tap_old_coef_0.hex";
defparam Ur0_n_18_pp.data_width = 14;
defparam Ur0_n_18_pp.addr_width = 8;
defparam Ur0_n_18_pp.depth = 192;
defparam Ur0_n_18_pp.mem_core = "M4K";
assign lut_val_0_n_18_pp[14] = lut_val_0_n_18_pp[13];
wire [14:0] lut_val_0_n_19_pp;
ram_lut_cen Ur0_n_19_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_5_n[19],tdl_4_n[19],tdl_3_n[19],tdl_2_n[19],tdl_1_n[19],tdl_0_n[19] } ), .wr_en(1'b0),.data_out( lut_val_0_n_19_pp[13:0]) ) ;
defparam Ur0_n_19_pp.device_family = "CYCLONEIII";
defparam Ur0_n_19_pp.init_file = "fir32tap_old_coef_0.hex";
defparam Ur0_n_19_pp.data_width = 14;
defparam Ur0_n_19_pp.addr_width = 8;
defparam Ur0_n_19_pp.depth = 192;
defparam Ur0_n_19_pp.mem_core = "M4K";
assign lut_val_0_n_19_pp[14] = lut_val_0_n_19_pp[13];
wire [14:0] lut_val_0_n_20_pp;
ram_lut_cen Ur0_n_20_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_5_n[20],tdl_4_n[20],tdl_3_n[20],tdl_2_n[20],tdl_1_n[20],tdl_0_n[20] } ), .wr_en(1'b0),.data_out( lut_val_0_n_20_pp[13:0]) ) ;
defparam Ur0_n_20_pp.device_family = "CYCLONEIII";
defparam Ur0_n_20_pp.init_file = "fir32tap_old_coef_0.hex";
defparam Ur0_n_20_pp.data_width = 14;
defparam Ur0_n_20_pp.addr_width = 8;
defparam Ur0_n_20_pp.depth = 192;
defparam Ur0_n_20_pp.mem_core = "M4K";
assign lut_val_0_n_20_pp[14] = lut_val_0_n_20_pp[13];
wire [14:0] lut_val_0_n_21_pp;
ram_lut_cen Ur0_n_21_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_5_n[21],tdl_4_n[21],tdl_3_n[21],tdl_2_n[21],tdl_1_n[21],tdl_0_n[21] } ), .wr_en(1'b0),.data_out( lut_val_0_n_21_pp[13:0]) ) ;
defparam Ur0_n_21_pp.device_family = "CYCLONEIII";
defparam Ur0_n_21_pp.init_file = "fir32tap_old_coef_0.hex";
defparam Ur0_n_21_pp.data_width = 14;
defparam Ur0_n_21_pp.addr_width = 8;
defparam Ur0_n_21_pp.depth = 192;
defparam Ur0_n_21_pp.mem_core = "M4K";
assign lut_val_0_n_21_pp[14] = lut_val_0_n_21_pp[13];
wire [14:0] lut_val_0_n_22_pp;
ram_lut_cen Ur0_n_22_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_5_n[22],tdl_4_n[22],tdl_3_n[22],tdl_2_n[22],tdl_1_n[22],tdl_0_n[22] } ), .wr_en(1'b0),.data_out( lut_val_0_n_22_pp[13:0]) ) ;
defparam Ur0_n_22_pp.device_family = "CYCLONEIII";
defparam Ur0_n_22_pp.init_file = "fir32tap_old_coef_0.hex";
defparam Ur0_n_22_pp.data_width = 14;
defparam Ur0_n_22_pp.addr_width = 8;
defparam Ur0_n_22_pp.depth = 192;
defparam Ur0_n_22_pp.mem_core = "M4K";
assign lut_val_0_n_22_pp[14] = lut_val_0_n_22_pp[13];
wire [14:0] lut_val_0_n_23_pp;
ram_lut_cen Ur0_n_23_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_5_n[23],tdl_4_n[23],tdl_3_n[23],tdl_2_n[23],tdl_1_n[23],tdl_0_n[23] } ), .wr_en(1'b0),.data_out( lut_val_0_n_23_pp[13:0]) ) ;
defparam Ur0_n_23_pp.device_family = "CYCLONEIII";
defparam Ur0_n_23_pp.init_file = "fir32tap_old_coef_0_inv.hex";
defparam Ur0_n_23_pp.data_width = 14;
defparam Ur0_n_23_pp.addr_width = 8;
defparam Ur0_n_23_pp.depth = 192;
defparam Ur0_n_23_pp.mem_core = "M4K";
assign lut_val_0_n_23_pp[14] = lut_val_0_n_23_pp[13];
wire [14:0] lut_val_1_n_0_pp;
ram_lut_cen Ur1_n_0_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_11_n[0],tdl_10_n[0],tdl_9_n[0],tdl_8_n[0],tdl_7_n[0],tdl_6_n[0] } ), .wr_en(1'b0),.data_out( lut_val_1_n_0_pp[14:0]) ) ;
defparam Ur1_n_0_pp.device_family = "CYCLONEIII";
defparam Ur1_n_0_pp.init_file = "fir32tap_old_coef_1.hex";
defparam Ur1_n_0_pp.data_width = 15;
defparam Ur1_n_0_pp.addr_width = 8;
defparam Ur1_n_0_pp.depth = 192;
defparam Ur1_n_0_pp.mem_core = "M4K";
wire [14:0] lut_val_1_n_1_pp;
ram_lut_cen Ur1_n_1_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_11_n[1],tdl_10_n[1],tdl_9_n[1],tdl_8_n[1],tdl_7_n[1],tdl_6_n[1] } ), .wr_en(1'b0),.data_out( lut_val_1_n_1_pp[14:0]) ) ;
defparam Ur1_n_1_pp.device_family = "CYCLONEIII";
defparam Ur1_n_1_pp.init_file = "fir32tap_old_coef_1.hex";
defparam Ur1_n_1_pp.data_width = 15;
defparam Ur1_n_1_pp.addr_width = 8;
defparam Ur1_n_1_pp.depth = 192;
defparam Ur1_n_1_pp.mem_core = "M4K";
wire [14:0] lut_val_1_n_2_pp;
ram_lut_cen Ur1_n_2_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_11_n[2],tdl_10_n[2],tdl_9_n[2],tdl_8_n[2],tdl_7_n[2],tdl_6_n[2] } ), .wr_en(1'b0),.data_out( lut_val_1_n_2_pp[14:0]) ) ;
defparam Ur1_n_2_pp.device_family = "CYCLONEIII";
defparam Ur1_n_2_pp.init_file = "fir32tap_old_coef_1.hex";
defparam Ur1_n_2_pp.data_width = 15;
defparam Ur1_n_2_pp.addr_width = 8;
defparam Ur1_n_2_pp.depth = 192;
defparam Ur1_n_2_pp.mem_core = "M4K";
wire [14:0] lut_val_1_n_3_pp;
ram_lut_cen Ur1_n_3_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_11_n[3],tdl_10_n[3],tdl_9_n[3],tdl_8_n[3],tdl_7_n[3],tdl_6_n[3] } ), .wr_en(1'b0),.data_out( lut_val_1_n_3_pp[14:0]) ) ;
defparam Ur1_n_3_pp.device_family = "CYCLONEIII";
defparam Ur1_n_3_pp.init_file = "fir32tap_old_coef_1.hex";
defparam Ur1_n_3_pp.data_width = 15;
defparam Ur1_n_3_pp.addr_width = 8;
defparam Ur1_n_3_pp.depth = 192;
defparam Ur1_n_3_pp.mem_core = "M4K";
wire [14:0] lut_val_1_n_4_pp;
ram_lut_cen Ur1_n_4_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_11_n[4],tdl_10_n[4],tdl_9_n[4],tdl_8_n[4],tdl_7_n[4],tdl_6_n[4] } ), .wr_en(1'b0),.data_out( lut_val_1_n_4_pp[14:0]) ) ;
defparam Ur1_n_4_pp.device_family = "CYCLONEIII";
defparam Ur1_n_4_pp.init_file = "fir32tap_old_coef_1.hex";
defparam Ur1_n_4_pp.data_width = 15;
defparam Ur1_n_4_pp.addr_width = 8;
defparam Ur1_n_4_pp.depth = 192;
defparam Ur1_n_4_pp.mem_core = "M4K";
wire [14:0] lut_val_1_n_5_pp;
ram_lut_cen Ur1_n_5_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_11_n[5],tdl_10_n[5],tdl_9_n[5],tdl_8_n[5],tdl_7_n[5],tdl_6_n[5] } ), .wr_en(1'b0),.data_out( lut_val_1_n_5_pp[14:0]) ) ;
defparam Ur1_n_5_pp.device_family = "CYCLONEIII";
defparam Ur1_n_5_pp.init_file = "fir32tap_old_coef_1.hex";
defparam Ur1_n_5_pp.data_width = 15;
defparam Ur1_n_5_pp.addr_width = 8;
defparam Ur1_n_5_pp.depth = 192;
defparam Ur1_n_5_pp.mem_core = "M4K";
wire [14:0] lut_val_1_n_6_pp;
ram_lut_cen Ur1_n_6_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_11_n[6],tdl_10_n[6],tdl_9_n[6],tdl_8_n[6],tdl_7_n[6],tdl_6_n[6] } ), .wr_en(1'b0),.data_out( lut_val_1_n_6_pp[14:0]) ) ;
defparam Ur1_n_6_pp.device_family = "CYCLONEIII";
defparam Ur1_n_6_pp.init_file = "fir32tap_old_coef_1.hex";
defparam Ur1_n_6_pp.data_width = 15;
defparam Ur1_n_6_pp.addr_width = 8;
defparam Ur1_n_6_pp.depth = 192;
defparam Ur1_n_6_pp.mem_core = "M4K";
wire [14:0] lut_val_1_n_7_pp;
ram_lut_cen Ur1_n_7_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_11_n[7],tdl_10_n[7],tdl_9_n[7],tdl_8_n[7],tdl_7_n[7],tdl_6_n[7] } ), .wr_en(1'b0),.data_out( lut_val_1_n_7_pp[14:0]) ) ;
defparam Ur1_n_7_pp.device_family = "CYCLONEIII";
defparam Ur1_n_7_pp.init_file = "fir32tap_old_coef_1.hex";
defparam Ur1_n_7_pp.data_width = 15;
defparam Ur1_n_7_pp.addr_width = 8;
defparam Ur1_n_7_pp.depth = 192;
defparam Ur1_n_7_pp.mem_core = "M4K";
wire [14:0] lut_val_1_n_8_pp;
ram_lut_cen Ur1_n_8_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_11_n[8],tdl_10_n[8],tdl_9_n[8],tdl_8_n[8],tdl_7_n[8],tdl_6_n[8] } ), .wr_en(1'b0),.data_out( lut_val_1_n_8_pp[14:0]) ) ;
defparam Ur1_n_8_pp.device_family = "CYCLONEIII";
defparam Ur1_n_8_pp.init_file = "fir32tap_old_coef_1.hex";
defparam Ur1_n_8_pp.data_width = 15;
defparam Ur1_n_8_pp.addr_width = 8;
defparam Ur1_n_8_pp.depth = 192;
defparam Ur1_n_8_pp.mem_core = "M4K";
wire [14:0] lut_val_1_n_9_pp;
ram_lut_cen Ur1_n_9_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_11_n[9],tdl_10_n[9],tdl_9_n[9],tdl_8_n[9],tdl_7_n[9],tdl_6_n[9] } ), .wr_en(1'b0),.data_out( lut_val_1_n_9_pp[14:0]) ) ;
defparam Ur1_n_9_pp.device_family = "CYCLONEIII";
defparam Ur1_n_9_pp.init_file = "fir32tap_old_coef_1.hex";
defparam Ur1_n_9_pp.data_width = 15;
defparam Ur1_n_9_pp.addr_width = 8;
defparam Ur1_n_9_pp.depth = 192;
defparam Ur1_n_9_pp.mem_core = "M4K";
wire [14:0] lut_val_1_n_10_pp;
ram_lut_cen Ur1_n_10_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_11_n[10],tdl_10_n[10],tdl_9_n[10],tdl_8_n[10],tdl_7_n[10],tdl_6_n[10] } ), .wr_en(1'b0),.data_out( lut_val_1_n_10_pp[14:0]) ) ;
defparam Ur1_n_10_pp.device_family = "CYCLONEIII";
defparam Ur1_n_10_pp.init_file = "fir32tap_old_coef_1.hex";
defparam Ur1_n_10_pp.data_width = 15;
defparam Ur1_n_10_pp.addr_width = 8;
defparam Ur1_n_10_pp.depth = 192;
defparam Ur1_n_10_pp.mem_core = "M4K";
wire [14:0] lut_val_1_n_11_pp;
ram_lut_cen Ur1_n_11_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_11_n[11],tdl_10_n[11],tdl_9_n[11],tdl_8_n[11],tdl_7_n[11],tdl_6_n[11] } ), .wr_en(1'b0),.data_out( lut_val_1_n_11_pp[14:0]) ) ;
defparam Ur1_n_11_pp.device_family = "CYCLONEIII";
defparam Ur1_n_11_pp.init_file = "fir32tap_old_coef_1.hex";
defparam Ur1_n_11_pp.data_width = 15;
defparam Ur1_n_11_pp.addr_width = 8;
defparam Ur1_n_11_pp.depth = 192;
defparam Ur1_n_11_pp.mem_core = "M4K";
wire [14:0] lut_val_1_n_12_pp;
ram_lut_cen Ur1_n_12_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_11_n[12],tdl_10_n[12],tdl_9_n[12],tdl_8_n[12],tdl_7_n[12],tdl_6_n[12] } ), .wr_en(1'b0),.data_out( lut_val_1_n_12_pp[14:0]) ) ;
defparam Ur1_n_12_pp.device_family = "CYCLONEIII";
defparam Ur1_n_12_pp.init_file = "fir32tap_old_coef_1.hex";
defparam Ur1_n_12_pp.data_width = 15;
defparam Ur1_n_12_pp.addr_width = 8;
defparam Ur1_n_12_pp.depth = 192;
defparam Ur1_n_12_pp.mem_core = "M4K";
wire [14:0] lut_val_1_n_13_pp;
ram_lut_cen Ur1_n_13_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_11_n[13],tdl_10_n[13],tdl_9_n[13],tdl_8_n[13],tdl_7_n[13],tdl_6_n[13] } ), .wr_en(1'b0),.data_out( lut_val_1_n_13_pp[14:0]) ) ;
defparam Ur1_n_13_pp.device_family = "CYCLONEIII";
defparam Ur1_n_13_pp.init_file = "fir32tap_old_coef_1.hex";
defparam Ur1_n_13_pp.data_width = 15;
defparam Ur1_n_13_pp.addr_width = 8;
defparam Ur1_n_13_pp.depth = 192;
defparam Ur1_n_13_pp.mem_core = "M4K";
wire [14:0] lut_val_1_n_14_pp;
ram_lut_cen Ur1_n_14_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_11_n[14],tdl_10_n[14],tdl_9_n[14],tdl_8_n[14],tdl_7_n[14],tdl_6_n[14] } ), .wr_en(1'b0),.data_out( lut_val_1_n_14_pp[14:0]) ) ;
defparam Ur1_n_14_pp.device_family = "CYCLONEIII";
defparam Ur1_n_14_pp.init_file = "fir32tap_old_coef_1.hex";
defparam Ur1_n_14_pp.data_width = 15;
defparam Ur1_n_14_pp.addr_width = 8;
defparam Ur1_n_14_pp.depth = 192;
defparam Ur1_n_14_pp.mem_core = "M4K";
wire [14:0] lut_val_1_n_15_pp;
ram_lut_cen Ur1_n_15_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_11_n[15],tdl_10_n[15],tdl_9_n[15],tdl_8_n[15],tdl_7_n[15],tdl_6_n[15] } ), .wr_en(1'b0),.data_out( lut_val_1_n_15_pp[14:0]) ) ;
defparam Ur1_n_15_pp.device_family = "CYCLONEIII";
defparam Ur1_n_15_pp.init_file = "fir32tap_old_coef_1.hex";
defparam Ur1_n_15_pp.data_width = 15;
defparam Ur1_n_15_pp.addr_width = 8;
defparam Ur1_n_15_pp.depth = 192;
defparam Ur1_n_15_pp.mem_core = "M4K";
wire [14:0] lut_val_1_n_16_pp;
ram_lut_cen Ur1_n_16_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_11_n[16],tdl_10_n[16],tdl_9_n[16],tdl_8_n[16],tdl_7_n[16],tdl_6_n[16] } ), .wr_en(1'b0),.data_out( lut_val_1_n_16_pp[14:0]) ) ;
defparam Ur1_n_16_pp.device_family = "CYCLONEIII";
defparam Ur1_n_16_pp.init_file = "fir32tap_old_coef_1.hex";
defparam Ur1_n_16_pp.data_width = 15;
defparam Ur1_n_16_pp.addr_width = 8;
defparam Ur1_n_16_pp.depth = 192;
defparam Ur1_n_16_pp.mem_core = "M4K";
wire [14:0] lut_val_1_n_17_pp;
ram_lut_cen Ur1_n_17_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_11_n[17],tdl_10_n[17],tdl_9_n[17],tdl_8_n[17],tdl_7_n[17],tdl_6_n[17] } ), .wr_en(1'b0),.data_out( lut_val_1_n_17_pp[14:0]) ) ;
defparam Ur1_n_17_pp.device_family = "CYCLONEIII";
defparam Ur1_n_17_pp.init_file = "fir32tap_old_coef_1.hex";
defparam Ur1_n_17_pp.data_width = 15;
defparam Ur1_n_17_pp.addr_width = 8;
defparam Ur1_n_17_pp.depth = 192;
defparam Ur1_n_17_pp.mem_core = "M4K";
wire [14:0] lut_val_1_n_18_pp;
ram_lut_cen Ur1_n_18_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_11_n[18],tdl_10_n[18],tdl_9_n[18],tdl_8_n[18],tdl_7_n[18],tdl_6_n[18] } ), .wr_en(1'b0),.data_out( lut_val_1_n_18_pp[14:0]) ) ;
defparam Ur1_n_18_pp.device_family = "CYCLONEIII";
defparam Ur1_n_18_pp.init_file = "fir32tap_old_coef_1.hex";
defparam Ur1_n_18_pp.data_width = 15;
defparam Ur1_n_18_pp.addr_width = 8;
defparam Ur1_n_18_pp.depth = 192;
defparam Ur1_n_18_pp.mem_core = "M4K";
wire [14:0] lut_val_1_n_19_pp;
ram_lut_cen Ur1_n_19_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_11_n[19],tdl_10_n[19],tdl_9_n[19],tdl_8_n[19],tdl_7_n[19],tdl_6_n[19] } ), .wr_en(1'b0),.data_out( lut_val_1_n_19_pp[14:0]) ) ;
defparam Ur1_n_19_pp.device_family = "CYCLONEIII";
defparam Ur1_n_19_pp.init_file = "fir32tap_old_coef_1.hex";
defparam Ur1_n_19_pp.data_width = 15;
defparam Ur1_n_19_pp.addr_width = 8;
defparam Ur1_n_19_pp.depth = 192;
defparam Ur1_n_19_pp.mem_core = "M4K";
wire [14:0] lut_val_1_n_20_pp;
ram_lut_cen Ur1_n_20_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_11_n[20],tdl_10_n[20],tdl_9_n[20],tdl_8_n[20],tdl_7_n[20],tdl_6_n[20] } ), .wr_en(1'b0),.data_out( lut_val_1_n_20_pp[14:0]) ) ;
defparam Ur1_n_20_pp.device_family = "CYCLONEIII";
defparam Ur1_n_20_pp.init_file = "fir32tap_old_coef_1.hex";
defparam Ur1_n_20_pp.data_width = 15;
defparam Ur1_n_20_pp.addr_width = 8;
defparam Ur1_n_20_pp.depth = 192;
defparam Ur1_n_20_pp.mem_core = "M4K";
wire [14:0] lut_val_1_n_21_pp;
ram_lut_cen Ur1_n_21_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_11_n[21],tdl_10_n[21],tdl_9_n[21],tdl_8_n[21],tdl_7_n[21],tdl_6_n[21] } ), .wr_en(1'b0),.data_out( lut_val_1_n_21_pp[14:0]) ) ;
defparam Ur1_n_21_pp.device_family = "CYCLONEIII";
defparam Ur1_n_21_pp.init_file = "fir32tap_old_coef_1.hex";
defparam Ur1_n_21_pp.data_width = 15;
defparam Ur1_n_21_pp.addr_width = 8;
defparam Ur1_n_21_pp.depth = 192;
defparam Ur1_n_21_pp.mem_core = "M4K";
wire [14:0] lut_val_1_n_22_pp;
ram_lut_cen Ur1_n_22_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_11_n[22],tdl_10_n[22],tdl_9_n[22],tdl_8_n[22],tdl_7_n[22],tdl_6_n[22] } ), .wr_en(1'b0),.data_out( lut_val_1_n_22_pp[14:0]) ) ;
defparam Ur1_n_22_pp.device_family = "CYCLONEIII";
defparam Ur1_n_22_pp.init_file = "fir32tap_old_coef_1.hex";
defparam Ur1_n_22_pp.data_width = 15;
defparam Ur1_n_22_pp.addr_width = 8;
defparam Ur1_n_22_pp.depth = 192;
defparam Ur1_n_22_pp.mem_core = "M4K";
wire [14:0] lut_val_1_n_23_pp;
ram_lut_cen Ur1_n_23_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_11_n[23],tdl_10_n[23],tdl_9_n[23],tdl_8_n[23],tdl_7_n[23],tdl_6_n[23] } ), .wr_en(1'b0),.data_out( lut_val_1_n_23_pp[14:0]) ) ;
defparam Ur1_n_23_pp.device_family = "CYCLONEIII";
defparam Ur1_n_23_pp.init_file = "fir32tap_old_coef_1_inv.hex";
defparam Ur1_n_23_pp.data_width = 15;
defparam Ur1_n_23_pp.addr_width = 8;
defparam Ur1_n_23_pp.depth = 192;
defparam Ur1_n_23_pp.mem_core = "M4K";
wire [14:0] lut_val_2_n_0_pp;
ram_lut_cen Ur2_n_0_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_12_n[0] } ), .wr_en(1'b0),.data_out( lut_val_2_n_0_pp[7:0]) ) ;
defparam Ur2_n_0_pp.device_family = "CYCLONEIII";
defparam Ur2_n_0_pp.init_file = "fir32tap_old_coef_2.hex";
defparam Ur2_n_0_pp.data_width = 8;
defparam Ur2_n_0_pp.addr_width = 3;
defparam Ur2_n_0_pp.depth = 6;
defparam Ur2_n_0_pp.mem_core = "M4K";
assign lut_val_2_n_0_pp[14] = lut_val_2_n_0_pp[7];
assign lut_val_2_n_0_pp[13] = lut_val_2_n_0_pp[7];
assign lut_val_2_n_0_pp[12] = lut_val_2_n_0_pp[7];
assign lut_val_2_n_0_pp[11] = lut_val_2_n_0_pp[7];
assign lut_val_2_n_0_pp[10] = lut_val_2_n_0_pp[7];
assign lut_val_2_n_0_pp[9] = lut_val_2_n_0_pp[7];
assign lut_val_2_n_0_pp[8] = lut_val_2_n_0_pp[7];
wire [14:0] lut_val_2_n_1_pp;
ram_lut_cen Ur2_n_1_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_12_n[1] } ), .wr_en(1'b0),.data_out( lut_val_2_n_1_pp[7:0]) ) ;
defparam Ur2_n_1_pp.device_family = "CYCLONEIII";
defparam Ur2_n_1_pp.init_file = "fir32tap_old_coef_2.hex";
defparam Ur2_n_1_pp.data_width = 8;
defparam Ur2_n_1_pp.addr_width = 3;
defparam Ur2_n_1_pp.depth = 6;
defparam Ur2_n_1_pp.mem_core = "M4K";
assign lut_val_2_n_1_pp[14] = lut_val_2_n_1_pp[7];
assign lut_val_2_n_1_pp[13] = lut_val_2_n_1_pp[7];
assign lut_val_2_n_1_pp[12] = lut_val_2_n_1_pp[7];
assign lut_val_2_n_1_pp[11] = lut_val_2_n_1_pp[7];
assign lut_val_2_n_1_pp[10] = lut_val_2_n_1_pp[7];
assign lut_val_2_n_1_pp[9] = lut_val_2_n_1_pp[7];
assign lut_val_2_n_1_pp[8] = lut_val_2_n_1_pp[7];
wire [14:0] lut_val_2_n_2_pp;
ram_lut_cen Ur2_n_2_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_12_n[2] } ), .wr_en(1'b0),.data_out( lut_val_2_n_2_pp[7:0]) ) ;
defparam Ur2_n_2_pp.device_family = "CYCLONEIII";
defparam Ur2_n_2_pp.init_file = "fir32tap_old_coef_2.hex";
defparam Ur2_n_2_pp.data_width = 8;
defparam Ur2_n_2_pp.addr_width = 3;
defparam Ur2_n_2_pp.depth = 6;
defparam Ur2_n_2_pp.mem_core = "M4K";
assign lut_val_2_n_2_pp[14] = lut_val_2_n_2_pp[7];
assign lut_val_2_n_2_pp[13] = lut_val_2_n_2_pp[7];
assign lut_val_2_n_2_pp[12] = lut_val_2_n_2_pp[7];
assign lut_val_2_n_2_pp[11] = lut_val_2_n_2_pp[7];
assign lut_val_2_n_2_pp[10] = lut_val_2_n_2_pp[7];
assign lut_val_2_n_2_pp[9] = lut_val_2_n_2_pp[7];
assign lut_val_2_n_2_pp[8] = lut_val_2_n_2_pp[7];
wire [14:0] lut_val_2_n_3_pp;
ram_lut_cen Ur2_n_3_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_12_n[3] } ), .wr_en(1'b0),.data_out( lut_val_2_n_3_pp[7:0]) ) ;
defparam Ur2_n_3_pp.device_family = "CYCLONEIII";
defparam Ur2_n_3_pp.init_file = "fir32tap_old_coef_2.hex";
defparam Ur2_n_3_pp.data_width = 8;
defparam Ur2_n_3_pp.addr_width = 3;
defparam Ur2_n_3_pp.depth = 6;
defparam Ur2_n_3_pp.mem_core = "M4K";
assign lut_val_2_n_3_pp[14] = lut_val_2_n_3_pp[7];
assign lut_val_2_n_3_pp[13] = lut_val_2_n_3_pp[7];
assign lut_val_2_n_3_pp[12] = lut_val_2_n_3_pp[7];
assign lut_val_2_n_3_pp[11] = lut_val_2_n_3_pp[7];
assign lut_val_2_n_3_pp[10] = lut_val_2_n_3_pp[7];
assign lut_val_2_n_3_pp[9] = lut_val_2_n_3_pp[7];
assign lut_val_2_n_3_pp[8] = lut_val_2_n_3_pp[7];
wire [14:0] lut_val_2_n_4_pp;
ram_lut_cen Ur2_n_4_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_12_n[4] } ), .wr_en(1'b0),.data_out( lut_val_2_n_4_pp[7:0]) ) ;
defparam Ur2_n_4_pp.device_family = "CYCLONEIII";
defparam Ur2_n_4_pp.init_file = "fir32tap_old_coef_2.hex";
defparam Ur2_n_4_pp.data_width = 8;
defparam Ur2_n_4_pp.addr_width = 3;
defparam Ur2_n_4_pp.depth = 6;
defparam Ur2_n_4_pp.mem_core = "M4K";
assign lut_val_2_n_4_pp[14] = lut_val_2_n_4_pp[7];
assign lut_val_2_n_4_pp[13] = lut_val_2_n_4_pp[7];
assign lut_val_2_n_4_pp[12] = lut_val_2_n_4_pp[7];
assign lut_val_2_n_4_pp[11] = lut_val_2_n_4_pp[7];
assign lut_val_2_n_4_pp[10] = lut_val_2_n_4_pp[7];
assign lut_val_2_n_4_pp[9] = lut_val_2_n_4_pp[7];
assign lut_val_2_n_4_pp[8] = lut_val_2_n_4_pp[7];
wire [14:0] lut_val_2_n_5_pp;
ram_lut_cen Ur2_n_5_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_12_n[5] } ), .wr_en(1'b0),.data_out( lut_val_2_n_5_pp[7:0]) ) ;
defparam Ur2_n_5_pp.device_family = "CYCLONEIII";
defparam Ur2_n_5_pp.init_file = "fir32tap_old_coef_2.hex";
defparam Ur2_n_5_pp.data_width = 8;
defparam Ur2_n_5_pp.addr_width = 3;
defparam Ur2_n_5_pp.depth = 6;
defparam Ur2_n_5_pp.mem_core = "M4K";
assign lut_val_2_n_5_pp[14] = lut_val_2_n_5_pp[7];
assign lut_val_2_n_5_pp[13] = lut_val_2_n_5_pp[7];
assign lut_val_2_n_5_pp[12] = lut_val_2_n_5_pp[7];
assign lut_val_2_n_5_pp[11] = lut_val_2_n_5_pp[7];
assign lut_val_2_n_5_pp[10] = lut_val_2_n_5_pp[7];
assign lut_val_2_n_5_pp[9] = lut_val_2_n_5_pp[7];
assign lut_val_2_n_5_pp[8] = lut_val_2_n_5_pp[7];
wire [14:0] lut_val_2_n_6_pp;
ram_lut_cen Ur2_n_6_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_12_n[6] } ), .wr_en(1'b0),.data_out( lut_val_2_n_6_pp[7:0]) ) ;
defparam Ur2_n_6_pp.device_family = "CYCLONEIII";
defparam Ur2_n_6_pp.init_file = "fir32tap_old_coef_2.hex";
defparam Ur2_n_6_pp.data_width = 8;
defparam Ur2_n_6_pp.addr_width = 3;
defparam Ur2_n_6_pp.depth = 6;
defparam Ur2_n_6_pp.mem_core = "M4K";
assign lut_val_2_n_6_pp[14] = lut_val_2_n_6_pp[7];
assign lut_val_2_n_6_pp[13] = lut_val_2_n_6_pp[7];
assign lut_val_2_n_6_pp[12] = lut_val_2_n_6_pp[7];
assign lut_val_2_n_6_pp[11] = lut_val_2_n_6_pp[7];
assign lut_val_2_n_6_pp[10] = lut_val_2_n_6_pp[7];
assign lut_val_2_n_6_pp[9] = lut_val_2_n_6_pp[7];
assign lut_val_2_n_6_pp[8] = lut_val_2_n_6_pp[7];
wire [14:0] lut_val_2_n_7_pp;
ram_lut_cen Ur2_n_7_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_12_n[7] } ), .wr_en(1'b0),.data_out( lut_val_2_n_7_pp[7:0]) ) ;
defparam Ur2_n_7_pp.device_family = "CYCLONEIII";
defparam Ur2_n_7_pp.init_file = "fir32tap_old_coef_2.hex";
defparam Ur2_n_7_pp.data_width = 8;
defparam Ur2_n_7_pp.addr_width = 3;
defparam Ur2_n_7_pp.depth = 6;
defparam Ur2_n_7_pp.mem_core = "M4K";
assign lut_val_2_n_7_pp[14] = lut_val_2_n_7_pp[7];
assign lut_val_2_n_7_pp[13] = lut_val_2_n_7_pp[7];
assign lut_val_2_n_7_pp[12] = lut_val_2_n_7_pp[7];
assign lut_val_2_n_7_pp[11] = lut_val_2_n_7_pp[7];
assign lut_val_2_n_7_pp[10] = lut_val_2_n_7_pp[7];
assign lut_val_2_n_7_pp[9] = lut_val_2_n_7_pp[7];
assign lut_val_2_n_7_pp[8] = lut_val_2_n_7_pp[7];
wire [14:0] lut_val_2_n_8_pp;
ram_lut_cen Ur2_n_8_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_12_n[8] } ), .wr_en(1'b0),.data_out( lut_val_2_n_8_pp[7:0]) ) ;
defparam Ur2_n_8_pp.device_family = "CYCLONEIII";
defparam Ur2_n_8_pp.init_file = "fir32tap_old_coef_2.hex";
defparam Ur2_n_8_pp.data_width = 8;
defparam Ur2_n_8_pp.addr_width = 3;
defparam Ur2_n_8_pp.depth = 6;
defparam Ur2_n_8_pp.mem_core = "M4K";
assign lut_val_2_n_8_pp[14] = lut_val_2_n_8_pp[7];
assign lut_val_2_n_8_pp[13] = lut_val_2_n_8_pp[7];
assign lut_val_2_n_8_pp[12] = lut_val_2_n_8_pp[7];
assign lut_val_2_n_8_pp[11] = lut_val_2_n_8_pp[7];
assign lut_val_2_n_8_pp[10] = lut_val_2_n_8_pp[7];
assign lut_val_2_n_8_pp[9] = lut_val_2_n_8_pp[7];
assign lut_val_2_n_8_pp[8] = lut_val_2_n_8_pp[7];
wire [14:0] lut_val_2_n_9_pp;
ram_lut_cen Ur2_n_9_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_12_n[9] } ), .wr_en(1'b0),.data_out( lut_val_2_n_9_pp[7:0]) ) ;
defparam Ur2_n_9_pp.device_family = "CYCLONEIII";
defparam Ur2_n_9_pp.init_file = "fir32tap_old_coef_2.hex";
defparam Ur2_n_9_pp.data_width = 8;
defparam Ur2_n_9_pp.addr_width = 3;
defparam Ur2_n_9_pp.depth = 6;
defparam Ur2_n_9_pp.mem_core = "M4K";
assign lut_val_2_n_9_pp[14] = lut_val_2_n_9_pp[7];
assign lut_val_2_n_9_pp[13] = lut_val_2_n_9_pp[7];
assign lut_val_2_n_9_pp[12] = lut_val_2_n_9_pp[7];
assign lut_val_2_n_9_pp[11] = lut_val_2_n_9_pp[7];
assign lut_val_2_n_9_pp[10] = lut_val_2_n_9_pp[7];
assign lut_val_2_n_9_pp[9] = lut_val_2_n_9_pp[7];
assign lut_val_2_n_9_pp[8] = lut_val_2_n_9_pp[7];
wire [14:0] lut_val_2_n_10_pp;
ram_lut_cen Ur2_n_10_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_12_n[10] } ), .wr_en(1'b0),.data_out( lut_val_2_n_10_pp[7:0]) ) ;
defparam Ur2_n_10_pp.device_family = "CYCLONEIII";
defparam Ur2_n_10_pp.init_file = "fir32tap_old_coef_2.hex";
defparam Ur2_n_10_pp.data_width = 8;
defparam Ur2_n_10_pp.addr_width = 3;
defparam Ur2_n_10_pp.depth = 6;
defparam Ur2_n_10_pp.mem_core = "M4K";
assign lut_val_2_n_10_pp[14] = lut_val_2_n_10_pp[7];
assign lut_val_2_n_10_pp[13] = lut_val_2_n_10_pp[7];
assign lut_val_2_n_10_pp[12] = lut_val_2_n_10_pp[7];
assign lut_val_2_n_10_pp[11] = lut_val_2_n_10_pp[7];
assign lut_val_2_n_10_pp[10] = lut_val_2_n_10_pp[7];
assign lut_val_2_n_10_pp[9] = lut_val_2_n_10_pp[7];
assign lut_val_2_n_10_pp[8] = lut_val_2_n_10_pp[7];
wire [14:0] lut_val_2_n_11_pp;
ram_lut_cen Ur2_n_11_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_12_n[11] } ), .wr_en(1'b0),.data_out( lut_val_2_n_11_pp[7:0]) ) ;
defparam Ur2_n_11_pp.device_family = "CYCLONEIII";
defparam Ur2_n_11_pp.init_file = "fir32tap_old_coef_2.hex";
defparam Ur2_n_11_pp.data_width = 8;
defparam Ur2_n_11_pp.addr_width = 3;
defparam Ur2_n_11_pp.depth = 6;
defparam Ur2_n_11_pp.mem_core = "M4K";
assign lut_val_2_n_11_pp[14] = lut_val_2_n_11_pp[7];
assign lut_val_2_n_11_pp[13] = lut_val_2_n_11_pp[7];
assign lut_val_2_n_11_pp[12] = lut_val_2_n_11_pp[7];
assign lut_val_2_n_11_pp[11] = lut_val_2_n_11_pp[7];
assign lut_val_2_n_11_pp[10] = lut_val_2_n_11_pp[7];
assign lut_val_2_n_11_pp[9] = lut_val_2_n_11_pp[7];
assign lut_val_2_n_11_pp[8] = lut_val_2_n_11_pp[7];
wire [14:0] lut_val_2_n_12_pp;
ram_lut_cen Ur2_n_12_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_12_n[12] } ), .wr_en(1'b0),.data_out( lut_val_2_n_12_pp[7:0]) ) ;
defparam Ur2_n_12_pp.device_family = "CYCLONEIII";
defparam Ur2_n_12_pp.init_file = "fir32tap_old_coef_2.hex";
defparam Ur2_n_12_pp.data_width = 8;
defparam Ur2_n_12_pp.addr_width = 3;
defparam Ur2_n_12_pp.depth = 6;
defparam Ur2_n_12_pp.mem_core = "M4K";
assign lut_val_2_n_12_pp[14] = lut_val_2_n_12_pp[7];
assign lut_val_2_n_12_pp[13] = lut_val_2_n_12_pp[7];
assign lut_val_2_n_12_pp[12] = lut_val_2_n_12_pp[7];
assign lut_val_2_n_12_pp[11] = lut_val_2_n_12_pp[7];
assign lut_val_2_n_12_pp[10] = lut_val_2_n_12_pp[7];
assign lut_val_2_n_12_pp[9] = lut_val_2_n_12_pp[7];
assign lut_val_2_n_12_pp[8] = lut_val_2_n_12_pp[7];
wire [14:0] lut_val_2_n_13_pp;
ram_lut_cen Ur2_n_13_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_12_n[13] } ), .wr_en(1'b0),.data_out( lut_val_2_n_13_pp[7:0]) ) ;
defparam Ur2_n_13_pp.device_family = "CYCLONEIII";
defparam Ur2_n_13_pp.init_file = "fir32tap_old_coef_2.hex";
defparam Ur2_n_13_pp.data_width = 8;
defparam Ur2_n_13_pp.addr_width = 3;
defparam Ur2_n_13_pp.depth = 6;
defparam Ur2_n_13_pp.mem_core = "M4K";
assign lut_val_2_n_13_pp[14] = lut_val_2_n_13_pp[7];
assign lut_val_2_n_13_pp[13] = lut_val_2_n_13_pp[7];
assign lut_val_2_n_13_pp[12] = lut_val_2_n_13_pp[7];
assign lut_val_2_n_13_pp[11] = lut_val_2_n_13_pp[7];
assign lut_val_2_n_13_pp[10] = lut_val_2_n_13_pp[7];
assign lut_val_2_n_13_pp[9] = lut_val_2_n_13_pp[7];
assign lut_val_2_n_13_pp[8] = lut_val_2_n_13_pp[7];
wire [14:0] lut_val_2_n_14_pp;
ram_lut_cen Ur2_n_14_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_12_n[14] } ), .wr_en(1'b0),.data_out( lut_val_2_n_14_pp[7:0]) ) ;
defparam Ur2_n_14_pp.device_family = "CYCLONEIII";
defparam Ur2_n_14_pp.init_file = "fir32tap_old_coef_2.hex";
defparam Ur2_n_14_pp.data_width = 8;
defparam Ur2_n_14_pp.addr_width = 3;
defparam Ur2_n_14_pp.depth = 6;
defparam Ur2_n_14_pp.mem_core = "M4K";
assign lut_val_2_n_14_pp[14] = lut_val_2_n_14_pp[7];
assign lut_val_2_n_14_pp[13] = lut_val_2_n_14_pp[7];
assign lut_val_2_n_14_pp[12] = lut_val_2_n_14_pp[7];
assign lut_val_2_n_14_pp[11] = lut_val_2_n_14_pp[7];
assign lut_val_2_n_14_pp[10] = lut_val_2_n_14_pp[7];
assign lut_val_2_n_14_pp[9] = lut_val_2_n_14_pp[7];
assign lut_val_2_n_14_pp[8] = lut_val_2_n_14_pp[7];
wire [14:0] lut_val_2_n_15_pp;
ram_lut_cen Ur2_n_15_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_12_n[15] } ), .wr_en(1'b0),.data_out( lut_val_2_n_15_pp[7:0]) ) ;
defparam Ur2_n_15_pp.device_family = "CYCLONEIII";
defparam Ur2_n_15_pp.init_file = "fir32tap_old_coef_2.hex";
defparam Ur2_n_15_pp.data_width = 8;
defparam Ur2_n_15_pp.addr_width = 3;
defparam Ur2_n_15_pp.depth = 6;
defparam Ur2_n_15_pp.mem_core = "M4K";
assign lut_val_2_n_15_pp[14] = lut_val_2_n_15_pp[7];
assign lut_val_2_n_15_pp[13] = lut_val_2_n_15_pp[7];
assign lut_val_2_n_15_pp[12] = lut_val_2_n_15_pp[7];
assign lut_val_2_n_15_pp[11] = lut_val_2_n_15_pp[7];
assign lut_val_2_n_15_pp[10] = lut_val_2_n_15_pp[7];
assign lut_val_2_n_15_pp[9] = lut_val_2_n_15_pp[7];
assign lut_val_2_n_15_pp[8] = lut_val_2_n_15_pp[7];
wire [14:0] lut_val_2_n_16_pp;
ram_lut_cen Ur2_n_16_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_12_n[16] } ), .wr_en(1'b0),.data_out( lut_val_2_n_16_pp[7:0]) ) ;
defparam Ur2_n_16_pp.device_family = "CYCLONEIII";
defparam Ur2_n_16_pp.init_file = "fir32tap_old_coef_2.hex";
defparam Ur2_n_16_pp.data_width = 8;
defparam Ur2_n_16_pp.addr_width = 3;
defparam Ur2_n_16_pp.depth = 6;
defparam Ur2_n_16_pp.mem_core = "M4K";
assign lut_val_2_n_16_pp[14] = lut_val_2_n_16_pp[7];
assign lut_val_2_n_16_pp[13] = lut_val_2_n_16_pp[7];
assign lut_val_2_n_16_pp[12] = lut_val_2_n_16_pp[7];
assign lut_val_2_n_16_pp[11] = lut_val_2_n_16_pp[7];
assign lut_val_2_n_16_pp[10] = lut_val_2_n_16_pp[7];
assign lut_val_2_n_16_pp[9] = lut_val_2_n_16_pp[7];
assign lut_val_2_n_16_pp[8] = lut_val_2_n_16_pp[7];
wire [14:0] lut_val_2_n_17_pp;
ram_lut_cen Ur2_n_17_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_12_n[17] } ), .wr_en(1'b0),.data_out( lut_val_2_n_17_pp[7:0]) ) ;
defparam Ur2_n_17_pp.device_family = "CYCLONEIII";
defparam Ur2_n_17_pp.init_file = "fir32tap_old_coef_2.hex";
defparam Ur2_n_17_pp.data_width = 8;
defparam Ur2_n_17_pp.addr_width = 3;
defparam Ur2_n_17_pp.depth = 6;
defparam Ur2_n_17_pp.mem_core = "M4K";
assign lut_val_2_n_17_pp[14] = lut_val_2_n_17_pp[7];
assign lut_val_2_n_17_pp[13] = lut_val_2_n_17_pp[7];
assign lut_val_2_n_17_pp[12] = lut_val_2_n_17_pp[7];
assign lut_val_2_n_17_pp[11] = lut_val_2_n_17_pp[7];
assign lut_val_2_n_17_pp[10] = lut_val_2_n_17_pp[7];
assign lut_val_2_n_17_pp[9] = lut_val_2_n_17_pp[7];
assign lut_val_2_n_17_pp[8] = lut_val_2_n_17_pp[7];
wire [14:0] lut_val_2_n_18_pp;
ram_lut_cen Ur2_n_18_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_12_n[18] } ), .wr_en(1'b0),.data_out( lut_val_2_n_18_pp[7:0]) ) ;
defparam Ur2_n_18_pp.device_family = "CYCLONEIII";
defparam Ur2_n_18_pp.init_file = "fir32tap_old_coef_2.hex";
defparam Ur2_n_18_pp.data_width = 8;
defparam Ur2_n_18_pp.addr_width = 3;
defparam Ur2_n_18_pp.depth = 6;
defparam Ur2_n_18_pp.mem_core = "M4K";
assign lut_val_2_n_18_pp[14] = lut_val_2_n_18_pp[7];
assign lut_val_2_n_18_pp[13] = lut_val_2_n_18_pp[7];
assign lut_val_2_n_18_pp[12] = lut_val_2_n_18_pp[7];
assign lut_val_2_n_18_pp[11] = lut_val_2_n_18_pp[7];
assign lut_val_2_n_18_pp[10] = lut_val_2_n_18_pp[7];
assign lut_val_2_n_18_pp[9] = lut_val_2_n_18_pp[7];
assign lut_val_2_n_18_pp[8] = lut_val_2_n_18_pp[7];
wire [14:0] lut_val_2_n_19_pp;
ram_lut_cen Ur2_n_19_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_12_n[19] } ), .wr_en(1'b0),.data_out( lut_val_2_n_19_pp[7:0]) ) ;
defparam Ur2_n_19_pp.device_family = "CYCLONEIII";
defparam Ur2_n_19_pp.init_file = "fir32tap_old_coef_2.hex";
defparam Ur2_n_19_pp.data_width = 8;
defparam Ur2_n_19_pp.addr_width = 3;
defparam Ur2_n_19_pp.depth = 6;
defparam Ur2_n_19_pp.mem_core = "M4K";
assign lut_val_2_n_19_pp[14] = lut_val_2_n_19_pp[7];
assign lut_val_2_n_19_pp[13] = lut_val_2_n_19_pp[7];
assign lut_val_2_n_19_pp[12] = lut_val_2_n_19_pp[7];
assign lut_val_2_n_19_pp[11] = lut_val_2_n_19_pp[7];
assign lut_val_2_n_19_pp[10] = lut_val_2_n_19_pp[7];
assign lut_val_2_n_19_pp[9] = lut_val_2_n_19_pp[7];
assign lut_val_2_n_19_pp[8] = lut_val_2_n_19_pp[7];
wire [14:0] lut_val_2_n_20_pp;
ram_lut_cen Ur2_n_20_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_12_n[20] } ), .wr_en(1'b0),.data_out( lut_val_2_n_20_pp[7:0]) ) ;
defparam Ur2_n_20_pp.device_family = "CYCLONEIII";
defparam Ur2_n_20_pp.init_file = "fir32tap_old_coef_2.hex";
defparam Ur2_n_20_pp.data_width = 8;
defparam Ur2_n_20_pp.addr_width = 3;
defparam Ur2_n_20_pp.depth = 6;
defparam Ur2_n_20_pp.mem_core = "M4K";
assign lut_val_2_n_20_pp[14] = lut_val_2_n_20_pp[7];
assign lut_val_2_n_20_pp[13] = lut_val_2_n_20_pp[7];
assign lut_val_2_n_20_pp[12] = lut_val_2_n_20_pp[7];
assign lut_val_2_n_20_pp[11] = lut_val_2_n_20_pp[7];
assign lut_val_2_n_20_pp[10] = lut_val_2_n_20_pp[7];
assign lut_val_2_n_20_pp[9] = lut_val_2_n_20_pp[7];
assign lut_val_2_n_20_pp[8] = lut_val_2_n_20_pp[7];
wire [14:0] lut_val_2_n_21_pp;
ram_lut_cen Ur2_n_21_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_12_n[21] } ), .wr_en(1'b0),.data_out( lut_val_2_n_21_pp[7:0]) ) ;
defparam Ur2_n_21_pp.device_family = "CYCLONEIII";
defparam Ur2_n_21_pp.init_file = "fir32tap_old_coef_2.hex";
defparam Ur2_n_21_pp.data_width = 8;
defparam Ur2_n_21_pp.addr_width = 3;
defparam Ur2_n_21_pp.depth = 6;
defparam Ur2_n_21_pp.mem_core = "M4K";
assign lut_val_2_n_21_pp[14] = lut_val_2_n_21_pp[7];
assign lut_val_2_n_21_pp[13] = lut_val_2_n_21_pp[7];
assign lut_val_2_n_21_pp[12] = lut_val_2_n_21_pp[7];
assign lut_val_2_n_21_pp[11] = lut_val_2_n_21_pp[7];
assign lut_val_2_n_21_pp[10] = lut_val_2_n_21_pp[7];
assign lut_val_2_n_21_pp[9] = lut_val_2_n_21_pp[7];
assign lut_val_2_n_21_pp[8] = lut_val_2_n_21_pp[7];
wire [14:0] lut_val_2_n_22_pp;
ram_lut_cen Ur2_n_22_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_12_n[22] } ), .wr_en(1'b0),.data_out( lut_val_2_n_22_pp[7:0]) ) ;
defparam Ur2_n_22_pp.device_family = "CYCLONEIII";
defparam Ur2_n_22_pp.init_file = "fir32tap_old_coef_2.hex";
defparam Ur2_n_22_pp.data_width = 8;
defparam Ur2_n_22_pp.addr_width = 3;
defparam Ur2_n_22_pp.depth = 6;
defparam Ur2_n_22_pp.mem_core = "M4K";
assign lut_val_2_n_22_pp[14] = lut_val_2_n_22_pp[7];
assign lut_val_2_n_22_pp[13] = lut_val_2_n_22_pp[7];
assign lut_val_2_n_22_pp[12] = lut_val_2_n_22_pp[7];
assign lut_val_2_n_22_pp[11] = lut_val_2_n_22_pp[7];
assign lut_val_2_n_22_pp[10] = lut_val_2_n_22_pp[7];
assign lut_val_2_n_22_pp[9] = lut_val_2_n_22_pp[7];
assign lut_val_2_n_22_pp[8] = lut_val_2_n_22_pp[7];
wire [14:0] lut_val_2_n_23_pp;
ram_lut_cen Ur2_n_23_pp(.clk_in(clk),  .gclk_en(clk_en),.clk_out(clk), .addr_in( {coef_set_dly[1],coef_set_dly[0],tdl_12_n[23] } ), .wr_en(1'b0),.data_out( lut_val_2_n_23_pp[7:0]) ) ;
defparam Ur2_n_23_pp.device_family = "CYCLONEIII";
defparam Ur2_n_23_pp.init_file = "fir32tap_old_coef_2_inv.hex";
defparam Ur2_n_23_pp.data_width = 8;
defparam Ur2_n_23_pp.addr_width = 3;
defparam Ur2_n_23_pp.depth = 6;
defparam Ur2_n_23_pp.mem_core = "M4K";
assign lut_val_2_n_23_pp[14] = lut_val_2_n_23_pp[7];
assign lut_val_2_n_23_pp[13] = lut_val_2_n_23_pp[7];
assign lut_val_2_n_23_pp[12] = lut_val_2_n_23_pp[7];
assign lut_val_2_n_23_pp[11] = lut_val_2_n_23_pp[7];
assign lut_val_2_n_23_pp[10] = lut_val_2_n_23_pp[7];
assign lut_val_2_n_23_pp[9] = lut_val_2_n_23_pp[7];
assign lut_val_2_n_23_pp[8] = lut_val_2_n_23_pp[7];


// ---- partial product adder tree ----

wire [37:0] lut_0_bit_0_fill;
wire [37:0] lut_0_bit_1_fill;
wire [37:0] lut_0_bit_2_fill;
wire [37:0] lut_0_bit_3_fill;
wire [37:0] lut_0_bit_4_fill;
wire [37:0] lut_0_bit_5_fill;
wire [37:0] lut_0_bit_6_fill;
wire [37:0] lut_0_bit_7_fill;
wire [37:0] lut_0_bit_8_fill;
wire [37:0] lut_0_bit_9_fill;
wire [37:0] lut_0_bit_10_fill;
wire [37:0] lut_0_bit_11_fill;
wire [37:0] lut_0_bit_12_fill;
wire [37:0] lut_0_bit_13_fill;
wire [37:0] lut_0_bit_14_fill;
wire [37:0] lut_0_bit_15_fill;
wire [37:0] lut_0_bit_16_fill;
wire [37:0] lut_0_bit_17_fill;
wire [37:0] lut_0_bit_18_fill;
wire [37:0] lut_0_bit_19_fill;
wire [37:0] lut_0_bit_20_fill;
wire [37:0] lut_0_bit_21_fill;
wire [37:0] lut_0_bit_22_fill;
wire [37:0] lut_0_bit_23_fill;
assign lut_0_bit_0_fill = {lut_val_0_n_0_pp[14], lut_val_0_n_0_pp[14], lut_val_0_n_0_pp[14], lut_val_0_n_0_pp[14], lut_val_0_n_0_pp[14], lut_val_0_n_0_pp[14], lut_val_0_n_0_pp[14], lut_val_0_n_0_pp[14], lut_val_0_n_0_pp[14], lut_val_0_n_0_pp[14], lut_val_0_n_0_pp[14], lut_val_0_n_0_pp[14], lut_val_0_n_0_pp[14], lut_val_0_n_0_pp[14], lut_val_0_n_0_pp[14], lut_val_0_n_0_pp[14], lut_val_0_n_0_pp[14], lut_val_0_n_0_pp[14], lut_val_0_n_0_pp[14], lut_val_0_n_0_pp[14], lut_val_0_n_0_pp[14], lut_val_0_n_0_pp[14], lut_val_0_n_0_pp[14],  lut_val_0_n_0_pp };
assign lut_0_bit_1_fill = {lut_val_0_n_1_pp[14], lut_val_0_n_1_pp[14], lut_val_0_n_1_pp[14], lut_val_0_n_1_pp[14], lut_val_0_n_1_pp[14], lut_val_0_n_1_pp[14], lut_val_0_n_1_pp[14], lut_val_0_n_1_pp[14], lut_val_0_n_1_pp[14], lut_val_0_n_1_pp[14], lut_val_0_n_1_pp[14], lut_val_0_n_1_pp[14], lut_val_0_n_1_pp[14], lut_val_0_n_1_pp[14], lut_val_0_n_1_pp[14], lut_val_0_n_1_pp[14], lut_val_0_n_1_pp[14], lut_val_0_n_1_pp[14], lut_val_0_n_1_pp[14], lut_val_0_n_1_pp[14], lut_val_0_n_1_pp[14], lut_val_0_n_1_pp[14],  lut_val_0_n_1_pp, 1'd0 };
assign lut_0_bit_2_fill = {lut_val_0_n_2_pp[14], lut_val_0_n_2_pp[14], lut_val_0_n_2_pp[14], lut_val_0_n_2_pp[14], lut_val_0_n_2_pp[14], lut_val_0_n_2_pp[14], lut_val_0_n_2_pp[14], lut_val_0_n_2_pp[14], lut_val_0_n_2_pp[14], lut_val_0_n_2_pp[14], lut_val_0_n_2_pp[14], lut_val_0_n_2_pp[14], lut_val_0_n_2_pp[14], lut_val_0_n_2_pp[14], lut_val_0_n_2_pp[14], lut_val_0_n_2_pp[14], lut_val_0_n_2_pp[14], lut_val_0_n_2_pp[14], lut_val_0_n_2_pp[14], lut_val_0_n_2_pp[14], lut_val_0_n_2_pp[14],  lut_val_0_n_2_pp, 2'd0 };
assign lut_0_bit_3_fill = {lut_val_0_n_3_pp[14], lut_val_0_n_3_pp[14], lut_val_0_n_3_pp[14], lut_val_0_n_3_pp[14], lut_val_0_n_3_pp[14], lut_val_0_n_3_pp[14], lut_val_0_n_3_pp[14], lut_val_0_n_3_pp[14], lut_val_0_n_3_pp[14], lut_val_0_n_3_pp[14], lut_val_0_n_3_pp[14], lut_val_0_n_3_pp[14], lut_val_0_n_3_pp[14], lut_val_0_n_3_pp[14], lut_val_0_n_3_pp[14], lut_val_0_n_3_pp[14], lut_val_0_n_3_pp[14], lut_val_0_n_3_pp[14], lut_val_0_n_3_pp[14], lut_val_0_n_3_pp[14],  lut_val_0_n_3_pp, 3'd0 };
assign lut_0_bit_4_fill = {lut_val_0_n_4_pp[14], lut_val_0_n_4_pp[14], lut_val_0_n_4_pp[14], lut_val_0_n_4_pp[14], lut_val_0_n_4_pp[14], lut_val_0_n_4_pp[14], lut_val_0_n_4_pp[14], lut_val_0_n_4_pp[14], lut_val_0_n_4_pp[14], lut_val_0_n_4_pp[14], lut_val_0_n_4_pp[14], lut_val_0_n_4_pp[14], lut_val_0_n_4_pp[14], lut_val_0_n_4_pp[14], lut_val_0_n_4_pp[14], lut_val_0_n_4_pp[14], lut_val_0_n_4_pp[14], lut_val_0_n_4_pp[14], lut_val_0_n_4_pp[14],  lut_val_0_n_4_pp, 4'd0 };
assign lut_0_bit_5_fill = {lut_val_0_n_5_pp[14], lut_val_0_n_5_pp[14], lut_val_0_n_5_pp[14], lut_val_0_n_5_pp[14], lut_val_0_n_5_pp[14], lut_val_0_n_5_pp[14], lut_val_0_n_5_pp[14], lut_val_0_n_5_pp[14], lut_val_0_n_5_pp[14], lut_val_0_n_5_pp[14], lut_val_0_n_5_pp[14], lut_val_0_n_5_pp[14], lut_val_0_n_5_pp[14], lut_val_0_n_5_pp[14], lut_val_0_n_5_pp[14], lut_val_0_n_5_pp[14], lut_val_0_n_5_pp[14], lut_val_0_n_5_pp[14],  lut_val_0_n_5_pp, 5'd0 };
assign lut_0_bit_6_fill = {lut_val_0_n_6_pp[14], lut_val_0_n_6_pp[14], lut_val_0_n_6_pp[14], lut_val_0_n_6_pp[14], lut_val_0_n_6_pp[14], lut_val_0_n_6_pp[14], lut_val_0_n_6_pp[14], lut_val_0_n_6_pp[14], lut_val_0_n_6_pp[14], lut_val_0_n_6_pp[14], lut_val_0_n_6_pp[14], lut_val_0_n_6_pp[14], lut_val_0_n_6_pp[14], lut_val_0_n_6_pp[14], lut_val_0_n_6_pp[14], lut_val_0_n_6_pp[14], lut_val_0_n_6_pp[14],  lut_val_0_n_6_pp, 6'd0 };
assign lut_0_bit_7_fill = {lut_val_0_n_7_pp[14], lut_val_0_n_7_pp[14], lut_val_0_n_7_pp[14], lut_val_0_n_7_pp[14], lut_val_0_n_7_pp[14], lut_val_0_n_7_pp[14], lut_val_0_n_7_pp[14], lut_val_0_n_7_pp[14], lut_val_0_n_7_pp[14], lut_val_0_n_7_pp[14], lut_val_0_n_7_pp[14], lut_val_0_n_7_pp[14], lut_val_0_n_7_pp[14], lut_val_0_n_7_pp[14], lut_val_0_n_7_pp[14], lut_val_0_n_7_pp[14],  lut_val_0_n_7_pp, 7'd0 };
assign lut_0_bit_8_fill = {lut_val_0_n_8_pp[14], lut_val_0_n_8_pp[14], lut_val_0_n_8_pp[14], lut_val_0_n_8_pp[14], lut_val_0_n_8_pp[14], lut_val_0_n_8_pp[14], lut_val_0_n_8_pp[14], lut_val_0_n_8_pp[14], lut_val_0_n_8_pp[14], lut_val_0_n_8_pp[14], lut_val_0_n_8_pp[14], lut_val_0_n_8_pp[14], lut_val_0_n_8_pp[14], lut_val_0_n_8_pp[14], lut_val_0_n_8_pp[14],  lut_val_0_n_8_pp, 8'd0 };
assign lut_0_bit_9_fill = {lut_val_0_n_9_pp[14], lut_val_0_n_9_pp[14], lut_val_0_n_9_pp[14], lut_val_0_n_9_pp[14], lut_val_0_n_9_pp[14], lut_val_0_n_9_pp[14], lut_val_0_n_9_pp[14], lut_val_0_n_9_pp[14], lut_val_0_n_9_pp[14], lut_val_0_n_9_pp[14], lut_val_0_n_9_pp[14], lut_val_0_n_9_pp[14], lut_val_0_n_9_pp[14], lut_val_0_n_9_pp[14],  lut_val_0_n_9_pp, 9'd0 };
assign lut_0_bit_10_fill = {lut_val_0_n_10_pp[14], lut_val_0_n_10_pp[14], lut_val_0_n_10_pp[14], lut_val_0_n_10_pp[14], lut_val_0_n_10_pp[14], lut_val_0_n_10_pp[14], lut_val_0_n_10_pp[14], lut_val_0_n_10_pp[14], lut_val_0_n_10_pp[14], lut_val_0_n_10_pp[14], lut_val_0_n_10_pp[14], lut_val_0_n_10_pp[14], lut_val_0_n_10_pp[14],  lut_val_0_n_10_pp, 10'd0 };
assign lut_0_bit_11_fill = {lut_val_0_n_11_pp[14], lut_val_0_n_11_pp[14], lut_val_0_n_11_pp[14], lut_val_0_n_11_pp[14], lut_val_0_n_11_pp[14], lut_val_0_n_11_pp[14], lut_val_0_n_11_pp[14], lut_val_0_n_11_pp[14], lut_val_0_n_11_pp[14], lut_val_0_n_11_pp[14], lut_val_0_n_11_pp[14], lut_val_0_n_11_pp[14],  lut_val_0_n_11_pp, 11'd0 };
assign lut_0_bit_12_fill = {lut_val_0_n_12_pp[14], lut_val_0_n_12_pp[14], lut_val_0_n_12_pp[14], lut_val_0_n_12_pp[14], lut_val_0_n_12_pp[14], lut_val_0_n_12_pp[14], lut_val_0_n_12_pp[14], lut_val_0_n_12_pp[14], lut_val_0_n_12_pp[14], lut_val_0_n_12_pp[14], lut_val_0_n_12_pp[14],  lut_val_0_n_12_pp, 12'd0 };
assign lut_0_bit_13_fill = {lut_val_0_n_13_pp[14], lut_val_0_n_13_pp[14], lut_val_0_n_13_pp[14], lut_val_0_n_13_pp[14], lut_val_0_n_13_pp[14], lut_val_0_n_13_pp[14], lut_val_0_n_13_pp[14], lut_val_0_n_13_pp[14], lut_val_0_n_13_pp[14], lut_val_0_n_13_pp[14],  lut_val_0_n_13_pp, 13'd0 };
assign lut_0_bit_14_fill = {lut_val_0_n_14_pp[14], lut_val_0_n_14_pp[14], lut_val_0_n_14_pp[14], lut_val_0_n_14_pp[14], lut_val_0_n_14_pp[14], lut_val_0_n_14_pp[14], lut_val_0_n_14_pp[14], lut_val_0_n_14_pp[14], lut_val_0_n_14_pp[14],  lut_val_0_n_14_pp, 14'd0 };
assign lut_0_bit_15_fill = {lut_val_0_n_15_pp[14], lut_val_0_n_15_pp[14], lut_val_0_n_15_pp[14], lut_val_0_n_15_pp[14], lut_val_0_n_15_pp[14], lut_val_0_n_15_pp[14], lut_val_0_n_15_pp[14], lut_val_0_n_15_pp[14],  lut_val_0_n_15_pp, 15'd0 };
assign lut_0_bit_16_fill = {lut_val_0_n_16_pp[14], lut_val_0_n_16_pp[14], lut_val_0_n_16_pp[14], lut_val_0_n_16_pp[14], lut_val_0_n_16_pp[14], lut_val_0_n_16_pp[14], lut_val_0_n_16_pp[14],  lut_val_0_n_16_pp, 16'd0 };
assign lut_0_bit_17_fill = {lut_val_0_n_17_pp[14], lut_val_0_n_17_pp[14], lut_val_0_n_17_pp[14], lut_val_0_n_17_pp[14], lut_val_0_n_17_pp[14], lut_val_0_n_17_pp[14],  lut_val_0_n_17_pp, 17'd0 };
assign lut_0_bit_18_fill = {lut_val_0_n_18_pp[14], lut_val_0_n_18_pp[14], lut_val_0_n_18_pp[14], lut_val_0_n_18_pp[14], lut_val_0_n_18_pp[14],  lut_val_0_n_18_pp, 18'd0 };
assign lut_0_bit_19_fill = {lut_val_0_n_19_pp[14], lut_val_0_n_19_pp[14], lut_val_0_n_19_pp[14], lut_val_0_n_19_pp[14],  lut_val_0_n_19_pp, 19'd0 };
assign lut_0_bit_20_fill = {lut_val_0_n_20_pp[14], lut_val_0_n_20_pp[14], lut_val_0_n_20_pp[14],  lut_val_0_n_20_pp, 20'd0 };
assign lut_0_bit_21_fill = {lut_val_0_n_21_pp[14], lut_val_0_n_21_pp[14],  lut_val_0_n_21_pp, 21'd0 };
assign lut_0_bit_22_fill = {lut_val_0_n_22_pp[14],  lut_val_0_n_22_pp, 22'd0 };
assign lut_0_bit_23_fill = { lut_val_0_n_23_pp, 23'd0 };
wire [38:0] tree_0_pp_l_0_n_0_n;
sadd_lpm_cen Uadd_0_lut_l_0_n_0_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_0_bit_0_fill), .bin(lut_0_bit_1_fill), .res(tree_0_pp_l_0_n_0_n) );
defparam Uadd_0_lut_l_0_n_0_n.IN_WIDTH = 38;
defparam Uadd_0_lut_l_0_n_0_n.PIPE_DEPTH = 3;
wire [38:0] tree_0_pp_l_0_n_1_n;
sadd_lpm_cen Uadd_0_lut_l_0_n_1_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_0_bit_2_fill), .bin(lut_0_bit_3_fill), .res(tree_0_pp_l_0_n_1_n) );
defparam Uadd_0_lut_l_0_n_1_n.IN_WIDTH = 38;
defparam Uadd_0_lut_l_0_n_1_n.PIPE_DEPTH = 3;
wire [38:0] tree_0_pp_l_0_n_2_n;
sadd_lpm_cen Uadd_0_lut_l_0_n_2_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_0_bit_4_fill), .bin(lut_0_bit_5_fill), .res(tree_0_pp_l_0_n_2_n) );
defparam Uadd_0_lut_l_0_n_2_n.IN_WIDTH = 38;
defparam Uadd_0_lut_l_0_n_2_n.PIPE_DEPTH = 3;
wire [38:0] tree_0_pp_l_0_n_3_n;
sadd_lpm_cen Uadd_0_lut_l_0_n_3_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_0_bit_6_fill), .bin(lut_0_bit_7_fill), .res(tree_0_pp_l_0_n_3_n) );
defparam Uadd_0_lut_l_0_n_3_n.IN_WIDTH = 38;
defparam Uadd_0_lut_l_0_n_3_n.PIPE_DEPTH = 3;
wire [38:0] tree_0_pp_l_0_n_4_n;
sadd_lpm_cen Uadd_0_lut_l_0_n_4_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_0_bit_8_fill), .bin(lut_0_bit_9_fill), .res(tree_0_pp_l_0_n_4_n) );
defparam Uadd_0_lut_l_0_n_4_n.IN_WIDTH = 38;
defparam Uadd_0_lut_l_0_n_4_n.PIPE_DEPTH = 3;
wire [38:0] tree_0_pp_l_0_n_5_n;
sadd_lpm_cen Uadd_0_lut_l_0_n_5_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_0_bit_10_fill), .bin(lut_0_bit_11_fill), .res(tree_0_pp_l_0_n_5_n) );
defparam Uadd_0_lut_l_0_n_5_n.IN_WIDTH = 38;
defparam Uadd_0_lut_l_0_n_5_n.PIPE_DEPTH = 3;
wire [38:0] tree_0_pp_l_0_n_6_n;
sadd_lpm_cen Uadd_0_lut_l_0_n_6_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_0_bit_12_fill), .bin(lut_0_bit_13_fill), .res(tree_0_pp_l_0_n_6_n) );
defparam Uadd_0_lut_l_0_n_6_n.IN_WIDTH = 38;
defparam Uadd_0_lut_l_0_n_6_n.PIPE_DEPTH = 3;
wire [38:0] tree_0_pp_l_0_n_7_n;
sadd_lpm_cen Uadd_0_lut_l_0_n_7_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_0_bit_14_fill), .bin(lut_0_bit_15_fill), .res(tree_0_pp_l_0_n_7_n) );
defparam Uadd_0_lut_l_0_n_7_n.IN_WIDTH = 38;
defparam Uadd_0_lut_l_0_n_7_n.PIPE_DEPTH = 3;
wire [38:0] tree_0_pp_l_0_n_8_n;
sadd_lpm_cen Uadd_0_lut_l_0_n_8_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_0_bit_16_fill), .bin(lut_0_bit_17_fill), .res(tree_0_pp_l_0_n_8_n) );
defparam Uadd_0_lut_l_0_n_8_n.IN_WIDTH = 38;
defparam Uadd_0_lut_l_0_n_8_n.PIPE_DEPTH = 3;
wire [38:0] tree_0_pp_l_0_n_9_n;
sadd_lpm_cen Uadd_0_lut_l_0_n_9_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_0_bit_18_fill), .bin(lut_0_bit_19_fill), .res(tree_0_pp_l_0_n_9_n) );
defparam Uadd_0_lut_l_0_n_9_n.IN_WIDTH = 38;
defparam Uadd_0_lut_l_0_n_9_n.PIPE_DEPTH = 3;
wire [38:0] tree_0_pp_l_0_n_10_n;
sadd_lpm_cen Uadd_0_lut_l_0_n_10_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_0_bit_20_fill), .bin(lut_0_bit_21_fill), .res(tree_0_pp_l_0_n_10_n) );
defparam Uadd_0_lut_l_0_n_10_n.IN_WIDTH = 38;
defparam Uadd_0_lut_l_0_n_10_n.PIPE_DEPTH = 3;
wire [38:0] tree_0_pp_l_0_n_11_n;
sadd_lpm_cen Uadd_0_lut_l_0_n_11_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_0_bit_22_fill), .bin(lut_0_bit_23_fill), .res(tree_0_pp_l_0_n_11_n) );
defparam Uadd_0_lut_l_0_n_11_n.IN_WIDTH = 38;
defparam Uadd_0_lut_l_0_n_11_n.PIPE_DEPTH = 3;

wire [39:0] tree_0_pp_l_1_n_0_n;
sadd_lpm_cen Uadd_0_lut_l_1_n_0_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_0_pp_l_0_n_0_n), .bin(tree_0_pp_l_0_n_1_n), .res(tree_0_pp_l_1_n_0_n) );
defparam Uadd_0_lut_l_1_n_0_n.IN_WIDTH = 39;
defparam Uadd_0_lut_l_1_n_0_n.PIPE_DEPTH = 3;
wire [39:0] tree_0_pp_l_1_n_1_n;
sadd_lpm_cen Uadd_0_lut_l_1_n_1_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_0_pp_l_0_n_2_n), .bin(tree_0_pp_l_0_n_3_n), .res(tree_0_pp_l_1_n_1_n) );
defparam Uadd_0_lut_l_1_n_1_n.IN_WIDTH = 39;
defparam Uadd_0_lut_l_1_n_1_n.PIPE_DEPTH = 3;
wire [39:0] tree_0_pp_l_1_n_2_n;
sadd_lpm_cen Uadd_0_lut_l_1_n_2_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_0_pp_l_0_n_4_n), .bin(tree_0_pp_l_0_n_5_n), .res(tree_0_pp_l_1_n_2_n) );
defparam Uadd_0_lut_l_1_n_2_n.IN_WIDTH = 39;
defparam Uadd_0_lut_l_1_n_2_n.PIPE_DEPTH = 3;
wire [39:0] tree_0_pp_l_1_n_3_n;
sadd_lpm_cen Uadd_0_lut_l_1_n_3_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_0_pp_l_0_n_6_n), .bin(tree_0_pp_l_0_n_7_n), .res(tree_0_pp_l_1_n_3_n) );
defparam Uadd_0_lut_l_1_n_3_n.IN_WIDTH = 39;
defparam Uadd_0_lut_l_1_n_3_n.PIPE_DEPTH = 3;
wire [39:0] tree_0_pp_l_1_n_4_n;
sadd_lpm_cen Uadd_0_lut_l_1_n_4_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_0_pp_l_0_n_8_n), .bin(tree_0_pp_l_0_n_9_n), .res(tree_0_pp_l_1_n_4_n) );
defparam Uadd_0_lut_l_1_n_4_n.IN_WIDTH = 39;
defparam Uadd_0_lut_l_1_n_4_n.PIPE_DEPTH = 3;
wire [39:0] tree_0_pp_l_1_n_5_n;
sadd_lpm_cen Uadd_0_lut_l_1_n_5_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_0_pp_l_0_n_10_n), .bin(tree_0_pp_l_0_n_11_n), .res(tree_0_pp_l_1_n_5_n) );
defparam Uadd_0_lut_l_1_n_5_n.IN_WIDTH = 39;
defparam Uadd_0_lut_l_1_n_5_n.PIPE_DEPTH = 3;

wire [40:0] tree_0_pp_l_2_n_0_n;
sadd_lpm_cen Uadd_0_lut_l_2_n_0_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_0_pp_l_1_n_0_n), .bin(tree_0_pp_l_1_n_1_n), .res(tree_0_pp_l_2_n_0_n) );
defparam Uadd_0_lut_l_2_n_0_n.IN_WIDTH = 40;
defparam Uadd_0_lut_l_2_n_0_n.PIPE_DEPTH = 3;
wire [40:0] tree_0_pp_l_2_n_1_n;
sadd_lpm_cen Uadd_0_lut_l_2_n_1_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_0_pp_l_1_n_2_n), .bin(tree_0_pp_l_1_n_3_n), .res(tree_0_pp_l_2_n_1_n) );
defparam Uadd_0_lut_l_2_n_1_n.IN_WIDTH = 40;
defparam Uadd_0_lut_l_2_n_1_n.PIPE_DEPTH = 3;
wire [40:0] tree_0_pp_l_2_n_2_n;
sadd_lpm_cen Uadd_0_lut_l_2_n_2_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_0_pp_l_1_n_4_n), .bin(tree_0_pp_l_1_n_5_n), .res(tree_0_pp_l_2_n_2_n) );
defparam Uadd_0_lut_l_2_n_2_n.IN_WIDTH = 40;
defparam Uadd_0_lut_l_2_n_2_n.PIPE_DEPTH = 3;

wire [41:0] tree_0_pp_l_3_n_0_n;
sadd_lpm_cen Uadd_0_lut_l_3_n_0_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_0_pp_l_2_n_0_n), .bin(tree_0_pp_l_2_n_1_n), .res(tree_0_pp_l_3_n_0_n) );
defparam Uadd_0_lut_l_3_n_0_n.IN_WIDTH = 41;
defparam Uadd_0_lut_l_3_n_0_n.PIPE_DEPTH = 3;
wire [41:0] tree_0_pp_l_3_n_1_n;
sadd_lpm_cen Uadd_0_lut_l_3_n_1_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_0_pp_l_2_n_2_n), .bin(41'd0), .res(tree_0_pp_l_3_n_1_n) );
defparam Uadd_0_lut_l_3_n_1_n.IN_WIDTH = 41;
defparam Uadd_0_lut_l_3_n_1_n.PIPE_DEPTH = 3;

wire [42:0] tree_0_pp_l_4_n_0_n;
sadd_lpm_cen Uadd_0_lut_l_4_n_0_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_0_pp_l_3_n_0_n), .bin(tree_0_pp_l_3_n_1_n), .res(tree_0_pp_l_4_n_0_n) );
defparam Uadd_0_lut_l_4_n_0_n.IN_WIDTH = 42;
defparam Uadd_0_lut_l_4_n_0_n.PIPE_DEPTH = 3;

wire [42:0] lut_val_0_n;
assign lut_val_0_n=tree_0_pp_l_4_n_0_n;


// ---- partial product adder tree ----

wire [37:0] lut_1_bit_0_fill;
wire [37:0] lut_1_bit_1_fill;
wire [37:0] lut_1_bit_2_fill;
wire [37:0] lut_1_bit_3_fill;
wire [37:0] lut_1_bit_4_fill;
wire [37:0] lut_1_bit_5_fill;
wire [37:0] lut_1_bit_6_fill;
wire [37:0] lut_1_bit_7_fill;
wire [37:0] lut_1_bit_8_fill;
wire [37:0] lut_1_bit_9_fill;
wire [37:0] lut_1_bit_10_fill;
wire [37:0] lut_1_bit_11_fill;
wire [37:0] lut_1_bit_12_fill;
wire [37:0] lut_1_bit_13_fill;
wire [37:0] lut_1_bit_14_fill;
wire [37:0] lut_1_bit_15_fill;
wire [37:0] lut_1_bit_16_fill;
wire [37:0] lut_1_bit_17_fill;
wire [37:0] lut_1_bit_18_fill;
wire [37:0] lut_1_bit_19_fill;
wire [37:0] lut_1_bit_20_fill;
wire [37:0] lut_1_bit_21_fill;
wire [37:0] lut_1_bit_22_fill;
wire [37:0] lut_1_bit_23_fill;
assign lut_1_bit_0_fill = {lut_val_1_n_0_pp[14], lut_val_1_n_0_pp[14], lut_val_1_n_0_pp[14], lut_val_1_n_0_pp[14], lut_val_1_n_0_pp[14], lut_val_1_n_0_pp[14], lut_val_1_n_0_pp[14], lut_val_1_n_0_pp[14], lut_val_1_n_0_pp[14], lut_val_1_n_0_pp[14], lut_val_1_n_0_pp[14], lut_val_1_n_0_pp[14], lut_val_1_n_0_pp[14], lut_val_1_n_0_pp[14], lut_val_1_n_0_pp[14], lut_val_1_n_0_pp[14], lut_val_1_n_0_pp[14], lut_val_1_n_0_pp[14], lut_val_1_n_0_pp[14], lut_val_1_n_0_pp[14], lut_val_1_n_0_pp[14], lut_val_1_n_0_pp[14], lut_val_1_n_0_pp[14],  lut_val_1_n_0_pp };
assign lut_1_bit_1_fill = {lut_val_1_n_1_pp[14], lut_val_1_n_1_pp[14], lut_val_1_n_1_pp[14], lut_val_1_n_1_pp[14], lut_val_1_n_1_pp[14], lut_val_1_n_1_pp[14], lut_val_1_n_1_pp[14], lut_val_1_n_1_pp[14], lut_val_1_n_1_pp[14], lut_val_1_n_1_pp[14], lut_val_1_n_1_pp[14], lut_val_1_n_1_pp[14], lut_val_1_n_1_pp[14], lut_val_1_n_1_pp[14], lut_val_1_n_1_pp[14], lut_val_1_n_1_pp[14], lut_val_1_n_1_pp[14], lut_val_1_n_1_pp[14], lut_val_1_n_1_pp[14], lut_val_1_n_1_pp[14], lut_val_1_n_1_pp[14], lut_val_1_n_1_pp[14],  lut_val_1_n_1_pp, 1'd0 };
assign lut_1_bit_2_fill = {lut_val_1_n_2_pp[14], lut_val_1_n_2_pp[14], lut_val_1_n_2_pp[14], lut_val_1_n_2_pp[14], lut_val_1_n_2_pp[14], lut_val_1_n_2_pp[14], lut_val_1_n_2_pp[14], lut_val_1_n_2_pp[14], lut_val_1_n_2_pp[14], lut_val_1_n_2_pp[14], lut_val_1_n_2_pp[14], lut_val_1_n_2_pp[14], lut_val_1_n_2_pp[14], lut_val_1_n_2_pp[14], lut_val_1_n_2_pp[14], lut_val_1_n_2_pp[14], lut_val_1_n_2_pp[14], lut_val_1_n_2_pp[14], lut_val_1_n_2_pp[14], lut_val_1_n_2_pp[14], lut_val_1_n_2_pp[14],  lut_val_1_n_2_pp, 2'd0 };
assign lut_1_bit_3_fill = {lut_val_1_n_3_pp[14], lut_val_1_n_3_pp[14], lut_val_1_n_3_pp[14], lut_val_1_n_3_pp[14], lut_val_1_n_3_pp[14], lut_val_1_n_3_pp[14], lut_val_1_n_3_pp[14], lut_val_1_n_3_pp[14], lut_val_1_n_3_pp[14], lut_val_1_n_3_pp[14], lut_val_1_n_3_pp[14], lut_val_1_n_3_pp[14], lut_val_1_n_3_pp[14], lut_val_1_n_3_pp[14], lut_val_1_n_3_pp[14], lut_val_1_n_3_pp[14], lut_val_1_n_3_pp[14], lut_val_1_n_3_pp[14], lut_val_1_n_3_pp[14], lut_val_1_n_3_pp[14],  lut_val_1_n_3_pp, 3'd0 };
assign lut_1_bit_4_fill = {lut_val_1_n_4_pp[14], lut_val_1_n_4_pp[14], lut_val_1_n_4_pp[14], lut_val_1_n_4_pp[14], lut_val_1_n_4_pp[14], lut_val_1_n_4_pp[14], lut_val_1_n_4_pp[14], lut_val_1_n_4_pp[14], lut_val_1_n_4_pp[14], lut_val_1_n_4_pp[14], lut_val_1_n_4_pp[14], lut_val_1_n_4_pp[14], lut_val_1_n_4_pp[14], lut_val_1_n_4_pp[14], lut_val_1_n_4_pp[14], lut_val_1_n_4_pp[14], lut_val_1_n_4_pp[14], lut_val_1_n_4_pp[14], lut_val_1_n_4_pp[14],  lut_val_1_n_4_pp, 4'd0 };
assign lut_1_bit_5_fill = {lut_val_1_n_5_pp[14], lut_val_1_n_5_pp[14], lut_val_1_n_5_pp[14], lut_val_1_n_5_pp[14], lut_val_1_n_5_pp[14], lut_val_1_n_5_pp[14], lut_val_1_n_5_pp[14], lut_val_1_n_5_pp[14], lut_val_1_n_5_pp[14], lut_val_1_n_5_pp[14], lut_val_1_n_5_pp[14], lut_val_1_n_5_pp[14], lut_val_1_n_5_pp[14], lut_val_1_n_5_pp[14], lut_val_1_n_5_pp[14], lut_val_1_n_5_pp[14], lut_val_1_n_5_pp[14], lut_val_1_n_5_pp[14],  lut_val_1_n_5_pp, 5'd0 };
assign lut_1_bit_6_fill = {lut_val_1_n_6_pp[14], lut_val_1_n_6_pp[14], lut_val_1_n_6_pp[14], lut_val_1_n_6_pp[14], lut_val_1_n_6_pp[14], lut_val_1_n_6_pp[14], lut_val_1_n_6_pp[14], lut_val_1_n_6_pp[14], lut_val_1_n_6_pp[14], lut_val_1_n_6_pp[14], lut_val_1_n_6_pp[14], lut_val_1_n_6_pp[14], lut_val_1_n_6_pp[14], lut_val_1_n_6_pp[14], lut_val_1_n_6_pp[14], lut_val_1_n_6_pp[14], lut_val_1_n_6_pp[14],  lut_val_1_n_6_pp, 6'd0 };
assign lut_1_bit_7_fill = {lut_val_1_n_7_pp[14], lut_val_1_n_7_pp[14], lut_val_1_n_7_pp[14], lut_val_1_n_7_pp[14], lut_val_1_n_7_pp[14], lut_val_1_n_7_pp[14], lut_val_1_n_7_pp[14], lut_val_1_n_7_pp[14], lut_val_1_n_7_pp[14], lut_val_1_n_7_pp[14], lut_val_1_n_7_pp[14], lut_val_1_n_7_pp[14], lut_val_1_n_7_pp[14], lut_val_1_n_7_pp[14], lut_val_1_n_7_pp[14], lut_val_1_n_7_pp[14],  lut_val_1_n_7_pp, 7'd0 };
assign lut_1_bit_8_fill = {lut_val_1_n_8_pp[14], lut_val_1_n_8_pp[14], lut_val_1_n_8_pp[14], lut_val_1_n_8_pp[14], lut_val_1_n_8_pp[14], lut_val_1_n_8_pp[14], lut_val_1_n_8_pp[14], lut_val_1_n_8_pp[14], lut_val_1_n_8_pp[14], lut_val_1_n_8_pp[14], lut_val_1_n_8_pp[14], lut_val_1_n_8_pp[14], lut_val_1_n_8_pp[14], lut_val_1_n_8_pp[14], lut_val_1_n_8_pp[14],  lut_val_1_n_8_pp, 8'd0 };
assign lut_1_bit_9_fill = {lut_val_1_n_9_pp[14], lut_val_1_n_9_pp[14], lut_val_1_n_9_pp[14], lut_val_1_n_9_pp[14], lut_val_1_n_9_pp[14], lut_val_1_n_9_pp[14], lut_val_1_n_9_pp[14], lut_val_1_n_9_pp[14], lut_val_1_n_9_pp[14], lut_val_1_n_9_pp[14], lut_val_1_n_9_pp[14], lut_val_1_n_9_pp[14], lut_val_1_n_9_pp[14], lut_val_1_n_9_pp[14],  lut_val_1_n_9_pp, 9'd0 };
assign lut_1_bit_10_fill = {lut_val_1_n_10_pp[14], lut_val_1_n_10_pp[14], lut_val_1_n_10_pp[14], lut_val_1_n_10_pp[14], lut_val_1_n_10_pp[14], lut_val_1_n_10_pp[14], lut_val_1_n_10_pp[14], lut_val_1_n_10_pp[14], lut_val_1_n_10_pp[14], lut_val_1_n_10_pp[14], lut_val_1_n_10_pp[14], lut_val_1_n_10_pp[14], lut_val_1_n_10_pp[14],  lut_val_1_n_10_pp, 10'd0 };
assign lut_1_bit_11_fill = {lut_val_1_n_11_pp[14], lut_val_1_n_11_pp[14], lut_val_1_n_11_pp[14], lut_val_1_n_11_pp[14], lut_val_1_n_11_pp[14], lut_val_1_n_11_pp[14], lut_val_1_n_11_pp[14], lut_val_1_n_11_pp[14], lut_val_1_n_11_pp[14], lut_val_1_n_11_pp[14], lut_val_1_n_11_pp[14], lut_val_1_n_11_pp[14],  lut_val_1_n_11_pp, 11'd0 };
assign lut_1_bit_12_fill = {lut_val_1_n_12_pp[14], lut_val_1_n_12_pp[14], lut_val_1_n_12_pp[14], lut_val_1_n_12_pp[14], lut_val_1_n_12_pp[14], lut_val_1_n_12_pp[14], lut_val_1_n_12_pp[14], lut_val_1_n_12_pp[14], lut_val_1_n_12_pp[14], lut_val_1_n_12_pp[14], lut_val_1_n_12_pp[14],  lut_val_1_n_12_pp, 12'd0 };
assign lut_1_bit_13_fill = {lut_val_1_n_13_pp[14], lut_val_1_n_13_pp[14], lut_val_1_n_13_pp[14], lut_val_1_n_13_pp[14], lut_val_1_n_13_pp[14], lut_val_1_n_13_pp[14], lut_val_1_n_13_pp[14], lut_val_1_n_13_pp[14], lut_val_1_n_13_pp[14], lut_val_1_n_13_pp[14],  lut_val_1_n_13_pp, 13'd0 };
assign lut_1_bit_14_fill = {lut_val_1_n_14_pp[14], lut_val_1_n_14_pp[14], lut_val_1_n_14_pp[14], lut_val_1_n_14_pp[14], lut_val_1_n_14_pp[14], lut_val_1_n_14_pp[14], lut_val_1_n_14_pp[14], lut_val_1_n_14_pp[14], lut_val_1_n_14_pp[14],  lut_val_1_n_14_pp, 14'd0 };
assign lut_1_bit_15_fill = {lut_val_1_n_15_pp[14], lut_val_1_n_15_pp[14], lut_val_1_n_15_pp[14], lut_val_1_n_15_pp[14], lut_val_1_n_15_pp[14], lut_val_1_n_15_pp[14], lut_val_1_n_15_pp[14], lut_val_1_n_15_pp[14],  lut_val_1_n_15_pp, 15'd0 };
assign lut_1_bit_16_fill = {lut_val_1_n_16_pp[14], lut_val_1_n_16_pp[14], lut_val_1_n_16_pp[14], lut_val_1_n_16_pp[14], lut_val_1_n_16_pp[14], lut_val_1_n_16_pp[14], lut_val_1_n_16_pp[14],  lut_val_1_n_16_pp, 16'd0 };
assign lut_1_bit_17_fill = {lut_val_1_n_17_pp[14], lut_val_1_n_17_pp[14], lut_val_1_n_17_pp[14], lut_val_1_n_17_pp[14], lut_val_1_n_17_pp[14], lut_val_1_n_17_pp[14],  lut_val_1_n_17_pp, 17'd0 };
assign lut_1_bit_18_fill = {lut_val_1_n_18_pp[14], lut_val_1_n_18_pp[14], lut_val_1_n_18_pp[14], lut_val_1_n_18_pp[14], lut_val_1_n_18_pp[14],  lut_val_1_n_18_pp, 18'd0 };
assign lut_1_bit_19_fill = {lut_val_1_n_19_pp[14], lut_val_1_n_19_pp[14], lut_val_1_n_19_pp[14], lut_val_1_n_19_pp[14],  lut_val_1_n_19_pp, 19'd0 };
assign lut_1_bit_20_fill = {lut_val_1_n_20_pp[14], lut_val_1_n_20_pp[14], lut_val_1_n_20_pp[14],  lut_val_1_n_20_pp, 20'd0 };
assign lut_1_bit_21_fill = {lut_val_1_n_21_pp[14], lut_val_1_n_21_pp[14],  lut_val_1_n_21_pp, 21'd0 };
assign lut_1_bit_22_fill = {lut_val_1_n_22_pp[14],  lut_val_1_n_22_pp, 22'd0 };
assign lut_1_bit_23_fill = { lut_val_1_n_23_pp, 23'd0 };
wire [38:0] tree_1_pp_l_0_n_0_n;
sadd_lpm_cen Uadd_1_lut_l_0_n_0_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_1_bit_0_fill), .bin(lut_1_bit_1_fill), .res(tree_1_pp_l_0_n_0_n) );
defparam Uadd_1_lut_l_0_n_0_n.IN_WIDTH = 38;
defparam Uadd_1_lut_l_0_n_0_n.PIPE_DEPTH = 3;
wire [38:0] tree_1_pp_l_0_n_1_n;
sadd_lpm_cen Uadd_1_lut_l_0_n_1_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_1_bit_2_fill), .bin(lut_1_bit_3_fill), .res(tree_1_pp_l_0_n_1_n) );
defparam Uadd_1_lut_l_0_n_1_n.IN_WIDTH = 38;
defparam Uadd_1_lut_l_0_n_1_n.PIPE_DEPTH = 3;
wire [38:0] tree_1_pp_l_0_n_2_n;
sadd_lpm_cen Uadd_1_lut_l_0_n_2_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_1_bit_4_fill), .bin(lut_1_bit_5_fill), .res(tree_1_pp_l_0_n_2_n) );
defparam Uadd_1_lut_l_0_n_2_n.IN_WIDTH = 38;
defparam Uadd_1_lut_l_0_n_2_n.PIPE_DEPTH = 3;
wire [38:0] tree_1_pp_l_0_n_3_n;
sadd_lpm_cen Uadd_1_lut_l_0_n_3_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_1_bit_6_fill), .bin(lut_1_bit_7_fill), .res(tree_1_pp_l_0_n_3_n) );
defparam Uadd_1_lut_l_0_n_3_n.IN_WIDTH = 38;
defparam Uadd_1_lut_l_0_n_3_n.PIPE_DEPTH = 3;
wire [38:0] tree_1_pp_l_0_n_4_n;
sadd_lpm_cen Uadd_1_lut_l_0_n_4_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_1_bit_8_fill), .bin(lut_1_bit_9_fill), .res(tree_1_pp_l_0_n_4_n) );
defparam Uadd_1_lut_l_0_n_4_n.IN_WIDTH = 38;
defparam Uadd_1_lut_l_0_n_4_n.PIPE_DEPTH = 3;
wire [38:0] tree_1_pp_l_0_n_5_n;
sadd_lpm_cen Uadd_1_lut_l_0_n_5_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_1_bit_10_fill), .bin(lut_1_bit_11_fill), .res(tree_1_pp_l_0_n_5_n) );
defparam Uadd_1_lut_l_0_n_5_n.IN_WIDTH = 38;
defparam Uadd_1_lut_l_0_n_5_n.PIPE_DEPTH = 3;
wire [38:0] tree_1_pp_l_0_n_6_n;
sadd_lpm_cen Uadd_1_lut_l_0_n_6_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_1_bit_12_fill), .bin(lut_1_bit_13_fill), .res(tree_1_pp_l_0_n_6_n) );
defparam Uadd_1_lut_l_0_n_6_n.IN_WIDTH = 38;
defparam Uadd_1_lut_l_0_n_6_n.PIPE_DEPTH = 3;
wire [38:0] tree_1_pp_l_0_n_7_n;
sadd_lpm_cen Uadd_1_lut_l_0_n_7_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_1_bit_14_fill), .bin(lut_1_bit_15_fill), .res(tree_1_pp_l_0_n_7_n) );
defparam Uadd_1_lut_l_0_n_7_n.IN_WIDTH = 38;
defparam Uadd_1_lut_l_0_n_7_n.PIPE_DEPTH = 3;
wire [38:0] tree_1_pp_l_0_n_8_n;
sadd_lpm_cen Uadd_1_lut_l_0_n_8_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_1_bit_16_fill), .bin(lut_1_bit_17_fill), .res(tree_1_pp_l_0_n_8_n) );
defparam Uadd_1_lut_l_0_n_8_n.IN_WIDTH = 38;
defparam Uadd_1_lut_l_0_n_8_n.PIPE_DEPTH = 3;
wire [38:0] tree_1_pp_l_0_n_9_n;
sadd_lpm_cen Uadd_1_lut_l_0_n_9_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_1_bit_18_fill), .bin(lut_1_bit_19_fill), .res(tree_1_pp_l_0_n_9_n) );
defparam Uadd_1_lut_l_0_n_9_n.IN_WIDTH = 38;
defparam Uadd_1_lut_l_0_n_9_n.PIPE_DEPTH = 3;
wire [38:0] tree_1_pp_l_0_n_10_n;
sadd_lpm_cen Uadd_1_lut_l_0_n_10_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_1_bit_20_fill), .bin(lut_1_bit_21_fill), .res(tree_1_pp_l_0_n_10_n) );
defparam Uadd_1_lut_l_0_n_10_n.IN_WIDTH = 38;
defparam Uadd_1_lut_l_0_n_10_n.PIPE_DEPTH = 3;
wire [38:0] tree_1_pp_l_0_n_11_n;
sadd_lpm_cen Uadd_1_lut_l_0_n_11_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_1_bit_22_fill), .bin(lut_1_bit_23_fill), .res(tree_1_pp_l_0_n_11_n) );
defparam Uadd_1_lut_l_0_n_11_n.IN_WIDTH = 38;
defparam Uadd_1_lut_l_0_n_11_n.PIPE_DEPTH = 3;

wire [39:0] tree_1_pp_l_1_n_0_n;
sadd_lpm_cen Uadd_1_lut_l_1_n_0_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_1_pp_l_0_n_0_n), .bin(tree_1_pp_l_0_n_1_n), .res(tree_1_pp_l_1_n_0_n) );
defparam Uadd_1_lut_l_1_n_0_n.IN_WIDTH = 39;
defparam Uadd_1_lut_l_1_n_0_n.PIPE_DEPTH = 3;
wire [39:0] tree_1_pp_l_1_n_1_n;
sadd_lpm_cen Uadd_1_lut_l_1_n_1_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_1_pp_l_0_n_2_n), .bin(tree_1_pp_l_0_n_3_n), .res(tree_1_pp_l_1_n_1_n) );
defparam Uadd_1_lut_l_1_n_1_n.IN_WIDTH = 39;
defparam Uadd_1_lut_l_1_n_1_n.PIPE_DEPTH = 3;
wire [39:0] tree_1_pp_l_1_n_2_n;
sadd_lpm_cen Uadd_1_lut_l_1_n_2_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_1_pp_l_0_n_4_n), .bin(tree_1_pp_l_0_n_5_n), .res(tree_1_pp_l_1_n_2_n) );
defparam Uadd_1_lut_l_1_n_2_n.IN_WIDTH = 39;
defparam Uadd_1_lut_l_1_n_2_n.PIPE_DEPTH = 3;
wire [39:0] tree_1_pp_l_1_n_3_n;
sadd_lpm_cen Uadd_1_lut_l_1_n_3_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_1_pp_l_0_n_6_n), .bin(tree_1_pp_l_0_n_7_n), .res(tree_1_pp_l_1_n_3_n) );
defparam Uadd_1_lut_l_1_n_3_n.IN_WIDTH = 39;
defparam Uadd_1_lut_l_1_n_3_n.PIPE_DEPTH = 3;
wire [39:0] tree_1_pp_l_1_n_4_n;
sadd_lpm_cen Uadd_1_lut_l_1_n_4_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_1_pp_l_0_n_8_n), .bin(tree_1_pp_l_0_n_9_n), .res(tree_1_pp_l_1_n_4_n) );
defparam Uadd_1_lut_l_1_n_4_n.IN_WIDTH = 39;
defparam Uadd_1_lut_l_1_n_4_n.PIPE_DEPTH = 3;
wire [39:0] tree_1_pp_l_1_n_5_n;
sadd_lpm_cen Uadd_1_lut_l_1_n_5_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_1_pp_l_0_n_10_n), .bin(tree_1_pp_l_0_n_11_n), .res(tree_1_pp_l_1_n_5_n) );
defparam Uadd_1_lut_l_1_n_5_n.IN_WIDTH = 39;
defparam Uadd_1_lut_l_1_n_5_n.PIPE_DEPTH = 3;

wire [40:0] tree_1_pp_l_2_n_0_n;
sadd_lpm_cen Uadd_1_lut_l_2_n_0_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_1_pp_l_1_n_0_n), .bin(tree_1_pp_l_1_n_1_n), .res(tree_1_pp_l_2_n_0_n) );
defparam Uadd_1_lut_l_2_n_0_n.IN_WIDTH = 40;
defparam Uadd_1_lut_l_2_n_0_n.PIPE_DEPTH = 3;
wire [40:0] tree_1_pp_l_2_n_1_n;
sadd_lpm_cen Uadd_1_lut_l_2_n_1_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_1_pp_l_1_n_2_n), .bin(tree_1_pp_l_1_n_3_n), .res(tree_1_pp_l_2_n_1_n) );
defparam Uadd_1_lut_l_2_n_1_n.IN_WIDTH = 40;
defparam Uadd_1_lut_l_2_n_1_n.PIPE_DEPTH = 3;
wire [40:0] tree_1_pp_l_2_n_2_n;
sadd_lpm_cen Uadd_1_lut_l_2_n_2_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_1_pp_l_1_n_4_n), .bin(tree_1_pp_l_1_n_5_n), .res(tree_1_pp_l_2_n_2_n) );
defparam Uadd_1_lut_l_2_n_2_n.IN_WIDTH = 40;
defparam Uadd_1_lut_l_2_n_2_n.PIPE_DEPTH = 3;

wire [41:0] tree_1_pp_l_3_n_0_n;
sadd_lpm_cen Uadd_1_lut_l_3_n_0_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_1_pp_l_2_n_0_n), .bin(tree_1_pp_l_2_n_1_n), .res(tree_1_pp_l_3_n_0_n) );
defparam Uadd_1_lut_l_3_n_0_n.IN_WIDTH = 41;
defparam Uadd_1_lut_l_3_n_0_n.PIPE_DEPTH = 3;
wire [41:0] tree_1_pp_l_3_n_1_n;
sadd_lpm_cen Uadd_1_lut_l_3_n_1_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_1_pp_l_2_n_2_n), .bin(41'd0), .res(tree_1_pp_l_3_n_1_n) );
defparam Uadd_1_lut_l_3_n_1_n.IN_WIDTH = 41;
defparam Uadd_1_lut_l_3_n_1_n.PIPE_DEPTH = 3;

wire [42:0] tree_1_pp_l_4_n_0_n;
sadd_lpm_cen Uadd_1_lut_l_4_n_0_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_1_pp_l_3_n_0_n), .bin(tree_1_pp_l_3_n_1_n), .res(tree_1_pp_l_4_n_0_n) );
defparam Uadd_1_lut_l_4_n_0_n.IN_WIDTH = 42;
defparam Uadd_1_lut_l_4_n_0_n.PIPE_DEPTH = 3;

wire [42:0] lut_val_1_n;
assign lut_val_1_n=tree_1_pp_l_4_n_0_n;


// ---- partial product adder tree ----

wire [37:0] lut_2_bit_0_fill;
wire [37:0] lut_2_bit_1_fill;
wire [37:0] lut_2_bit_2_fill;
wire [37:0] lut_2_bit_3_fill;
wire [37:0] lut_2_bit_4_fill;
wire [37:0] lut_2_bit_5_fill;
wire [37:0] lut_2_bit_6_fill;
wire [37:0] lut_2_bit_7_fill;
wire [37:0] lut_2_bit_8_fill;
wire [37:0] lut_2_bit_9_fill;
wire [37:0] lut_2_bit_10_fill;
wire [37:0] lut_2_bit_11_fill;
wire [37:0] lut_2_bit_12_fill;
wire [37:0] lut_2_bit_13_fill;
wire [37:0] lut_2_bit_14_fill;
wire [37:0] lut_2_bit_15_fill;
wire [37:0] lut_2_bit_16_fill;
wire [37:0] lut_2_bit_17_fill;
wire [37:0] lut_2_bit_18_fill;
wire [37:0] lut_2_bit_19_fill;
wire [37:0] lut_2_bit_20_fill;
wire [37:0] lut_2_bit_21_fill;
wire [37:0] lut_2_bit_22_fill;
wire [37:0] lut_2_bit_23_fill;
assign lut_2_bit_0_fill = {lut_val_2_n_0_pp[14], lut_val_2_n_0_pp[14], lut_val_2_n_0_pp[14], lut_val_2_n_0_pp[14], lut_val_2_n_0_pp[14], lut_val_2_n_0_pp[14], lut_val_2_n_0_pp[14], lut_val_2_n_0_pp[14], lut_val_2_n_0_pp[14], lut_val_2_n_0_pp[14], lut_val_2_n_0_pp[14], lut_val_2_n_0_pp[14], lut_val_2_n_0_pp[14], lut_val_2_n_0_pp[14], lut_val_2_n_0_pp[14], lut_val_2_n_0_pp[14], lut_val_2_n_0_pp[14], lut_val_2_n_0_pp[14], lut_val_2_n_0_pp[14], lut_val_2_n_0_pp[14], lut_val_2_n_0_pp[14], lut_val_2_n_0_pp[14], lut_val_2_n_0_pp[14],  lut_val_2_n_0_pp };
assign lut_2_bit_1_fill = {lut_val_2_n_1_pp[14], lut_val_2_n_1_pp[14], lut_val_2_n_1_pp[14], lut_val_2_n_1_pp[14], lut_val_2_n_1_pp[14], lut_val_2_n_1_pp[14], lut_val_2_n_1_pp[14], lut_val_2_n_1_pp[14], lut_val_2_n_1_pp[14], lut_val_2_n_1_pp[14], lut_val_2_n_1_pp[14], lut_val_2_n_1_pp[14], lut_val_2_n_1_pp[14], lut_val_2_n_1_pp[14], lut_val_2_n_1_pp[14], lut_val_2_n_1_pp[14], lut_val_2_n_1_pp[14], lut_val_2_n_1_pp[14], lut_val_2_n_1_pp[14], lut_val_2_n_1_pp[14], lut_val_2_n_1_pp[14], lut_val_2_n_1_pp[14],  lut_val_2_n_1_pp, 1'd0 };
assign lut_2_bit_2_fill = {lut_val_2_n_2_pp[14], lut_val_2_n_2_pp[14], lut_val_2_n_2_pp[14], lut_val_2_n_2_pp[14], lut_val_2_n_2_pp[14], lut_val_2_n_2_pp[14], lut_val_2_n_2_pp[14], lut_val_2_n_2_pp[14], lut_val_2_n_2_pp[14], lut_val_2_n_2_pp[14], lut_val_2_n_2_pp[14], lut_val_2_n_2_pp[14], lut_val_2_n_2_pp[14], lut_val_2_n_2_pp[14], lut_val_2_n_2_pp[14], lut_val_2_n_2_pp[14], lut_val_2_n_2_pp[14], lut_val_2_n_2_pp[14], lut_val_2_n_2_pp[14], lut_val_2_n_2_pp[14], lut_val_2_n_2_pp[14],  lut_val_2_n_2_pp, 2'd0 };
assign lut_2_bit_3_fill = {lut_val_2_n_3_pp[14], lut_val_2_n_3_pp[14], lut_val_2_n_3_pp[14], lut_val_2_n_3_pp[14], lut_val_2_n_3_pp[14], lut_val_2_n_3_pp[14], lut_val_2_n_3_pp[14], lut_val_2_n_3_pp[14], lut_val_2_n_3_pp[14], lut_val_2_n_3_pp[14], lut_val_2_n_3_pp[14], lut_val_2_n_3_pp[14], lut_val_2_n_3_pp[14], lut_val_2_n_3_pp[14], lut_val_2_n_3_pp[14], lut_val_2_n_3_pp[14], lut_val_2_n_3_pp[14], lut_val_2_n_3_pp[14], lut_val_2_n_3_pp[14], lut_val_2_n_3_pp[14],  lut_val_2_n_3_pp, 3'd0 };
assign lut_2_bit_4_fill = {lut_val_2_n_4_pp[14], lut_val_2_n_4_pp[14], lut_val_2_n_4_pp[14], lut_val_2_n_4_pp[14], lut_val_2_n_4_pp[14], lut_val_2_n_4_pp[14], lut_val_2_n_4_pp[14], lut_val_2_n_4_pp[14], lut_val_2_n_4_pp[14], lut_val_2_n_4_pp[14], lut_val_2_n_4_pp[14], lut_val_2_n_4_pp[14], lut_val_2_n_4_pp[14], lut_val_2_n_4_pp[14], lut_val_2_n_4_pp[14], lut_val_2_n_4_pp[14], lut_val_2_n_4_pp[14], lut_val_2_n_4_pp[14], lut_val_2_n_4_pp[14],  lut_val_2_n_4_pp, 4'd0 };
assign lut_2_bit_5_fill = {lut_val_2_n_5_pp[14], lut_val_2_n_5_pp[14], lut_val_2_n_5_pp[14], lut_val_2_n_5_pp[14], lut_val_2_n_5_pp[14], lut_val_2_n_5_pp[14], lut_val_2_n_5_pp[14], lut_val_2_n_5_pp[14], lut_val_2_n_5_pp[14], lut_val_2_n_5_pp[14], lut_val_2_n_5_pp[14], lut_val_2_n_5_pp[14], lut_val_2_n_5_pp[14], lut_val_2_n_5_pp[14], lut_val_2_n_5_pp[14], lut_val_2_n_5_pp[14], lut_val_2_n_5_pp[14], lut_val_2_n_5_pp[14],  lut_val_2_n_5_pp, 5'd0 };
assign lut_2_bit_6_fill = {lut_val_2_n_6_pp[14], lut_val_2_n_6_pp[14], lut_val_2_n_6_pp[14], lut_val_2_n_6_pp[14], lut_val_2_n_6_pp[14], lut_val_2_n_6_pp[14], lut_val_2_n_6_pp[14], lut_val_2_n_6_pp[14], lut_val_2_n_6_pp[14], lut_val_2_n_6_pp[14], lut_val_2_n_6_pp[14], lut_val_2_n_6_pp[14], lut_val_2_n_6_pp[14], lut_val_2_n_6_pp[14], lut_val_2_n_6_pp[14], lut_val_2_n_6_pp[14], lut_val_2_n_6_pp[14],  lut_val_2_n_6_pp, 6'd0 };
assign lut_2_bit_7_fill = {lut_val_2_n_7_pp[14], lut_val_2_n_7_pp[14], lut_val_2_n_7_pp[14], lut_val_2_n_7_pp[14], lut_val_2_n_7_pp[14], lut_val_2_n_7_pp[14], lut_val_2_n_7_pp[14], lut_val_2_n_7_pp[14], lut_val_2_n_7_pp[14], lut_val_2_n_7_pp[14], lut_val_2_n_7_pp[14], lut_val_2_n_7_pp[14], lut_val_2_n_7_pp[14], lut_val_2_n_7_pp[14], lut_val_2_n_7_pp[14], lut_val_2_n_7_pp[14],  lut_val_2_n_7_pp, 7'd0 };
assign lut_2_bit_8_fill = {lut_val_2_n_8_pp[14], lut_val_2_n_8_pp[14], lut_val_2_n_8_pp[14], lut_val_2_n_8_pp[14], lut_val_2_n_8_pp[14], lut_val_2_n_8_pp[14], lut_val_2_n_8_pp[14], lut_val_2_n_8_pp[14], lut_val_2_n_8_pp[14], lut_val_2_n_8_pp[14], lut_val_2_n_8_pp[14], lut_val_2_n_8_pp[14], lut_val_2_n_8_pp[14], lut_val_2_n_8_pp[14], lut_val_2_n_8_pp[14],  lut_val_2_n_8_pp, 8'd0 };
assign lut_2_bit_9_fill = {lut_val_2_n_9_pp[14], lut_val_2_n_9_pp[14], lut_val_2_n_9_pp[14], lut_val_2_n_9_pp[14], lut_val_2_n_9_pp[14], lut_val_2_n_9_pp[14], lut_val_2_n_9_pp[14], lut_val_2_n_9_pp[14], lut_val_2_n_9_pp[14], lut_val_2_n_9_pp[14], lut_val_2_n_9_pp[14], lut_val_2_n_9_pp[14], lut_val_2_n_9_pp[14], lut_val_2_n_9_pp[14],  lut_val_2_n_9_pp, 9'd0 };
assign lut_2_bit_10_fill = {lut_val_2_n_10_pp[14], lut_val_2_n_10_pp[14], lut_val_2_n_10_pp[14], lut_val_2_n_10_pp[14], lut_val_2_n_10_pp[14], lut_val_2_n_10_pp[14], lut_val_2_n_10_pp[14], lut_val_2_n_10_pp[14], lut_val_2_n_10_pp[14], lut_val_2_n_10_pp[14], lut_val_2_n_10_pp[14], lut_val_2_n_10_pp[14], lut_val_2_n_10_pp[14],  lut_val_2_n_10_pp, 10'd0 };
assign lut_2_bit_11_fill = {lut_val_2_n_11_pp[14], lut_val_2_n_11_pp[14], lut_val_2_n_11_pp[14], lut_val_2_n_11_pp[14], lut_val_2_n_11_pp[14], lut_val_2_n_11_pp[14], lut_val_2_n_11_pp[14], lut_val_2_n_11_pp[14], lut_val_2_n_11_pp[14], lut_val_2_n_11_pp[14], lut_val_2_n_11_pp[14], lut_val_2_n_11_pp[14],  lut_val_2_n_11_pp, 11'd0 };
assign lut_2_bit_12_fill = {lut_val_2_n_12_pp[14], lut_val_2_n_12_pp[14], lut_val_2_n_12_pp[14], lut_val_2_n_12_pp[14], lut_val_2_n_12_pp[14], lut_val_2_n_12_pp[14], lut_val_2_n_12_pp[14], lut_val_2_n_12_pp[14], lut_val_2_n_12_pp[14], lut_val_2_n_12_pp[14], lut_val_2_n_12_pp[14],  lut_val_2_n_12_pp, 12'd0 };
assign lut_2_bit_13_fill = {lut_val_2_n_13_pp[14], lut_val_2_n_13_pp[14], lut_val_2_n_13_pp[14], lut_val_2_n_13_pp[14], lut_val_2_n_13_pp[14], lut_val_2_n_13_pp[14], lut_val_2_n_13_pp[14], lut_val_2_n_13_pp[14], lut_val_2_n_13_pp[14], lut_val_2_n_13_pp[14],  lut_val_2_n_13_pp, 13'd0 };
assign lut_2_bit_14_fill = {lut_val_2_n_14_pp[14], lut_val_2_n_14_pp[14], lut_val_2_n_14_pp[14], lut_val_2_n_14_pp[14], lut_val_2_n_14_pp[14], lut_val_2_n_14_pp[14], lut_val_2_n_14_pp[14], lut_val_2_n_14_pp[14], lut_val_2_n_14_pp[14],  lut_val_2_n_14_pp, 14'd0 };
assign lut_2_bit_15_fill = {lut_val_2_n_15_pp[14], lut_val_2_n_15_pp[14], lut_val_2_n_15_pp[14], lut_val_2_n_15_pp[14], lut_val_2_n_15_pp[14], lut_val_2_n_15_pp[14], lut_val_2_n_15_pp[14], lut_val_2_n_15_pp[14],  lut_val_2_n_15_pp, 15'd0 };
assign lut_2_bit_16_fill = {lut_val_2_n_16_pp[14], lut_val_2_n_16_pp[14], lut_val_2_n_16_pp[14], lut_val_2_n_16_pp[14], lut_val_2_n_16_pp[14], lut_val_2_n_16_pp[14], lut_val_2_n_16_pp[14],  lut_val_2_n_16_pp, 16'd0 };
assign lut_2_bit_17_fill = {lut_val_2_n_17_pp[14], lut_val_2_n_17_pp[14], lut_val_2_n_17_pp[14], lut_val_2_n_17_pp[14], lut_val_2_n_17_pp[14], lut_val_2_n_17_pp[14],  lut_val_2_n_17_pp, 17'd0 };
assign lut_2_bit_18_fill = {lut_val_2_n_18_pp[14], lut_val_2_n_18_pp[14], lut_val_2_n_18_pp[14], lut_val_2_n_18_pp[14], lut_val_2_n_18_pp[14],  lut_val_2_n_18_pp, 18'd0 };
assign lut_2_bit_19_fill = {lut_val_2_n_19_pp[14], lut_val_2_n_19_pp[14], lut_val_2_n_19_pp[14], lut_val_2_n_19_pp[14],  lut_val_2_n_19_pp, 19'd0 };
assign lut_2_bit_20_fill = {lut_val_2_n_20_pp[14], lut_val_2_n_20_pp[14], lut_val_2_n_20_pp[14],  lut_val_2_n_20_pp, 20'd0 };
assign lut_2_bit_21_fill = {lut_val_2_n_21_pp[14], lut_val_2_n_21_pp[14],  lut_val_2_n_21_pp, 21'd0 };
assign lut_2_bit_22_fill = {lut_val_2_n_22_pp[14],  lut_val_2_n_22_pp, 22'd0 };
assign lut_2_bit_23_fill = { lut_val_2_n_23_pp, 23'd0 };
wire [38:0] tree_2_pp_l_0_n_0_n;
sadd_lpm_cen Uadd_2_lut_l_0_n_0_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_2_bit_0_fill), .bin(lut_2_bit_1_fill), .res(tree_2_pp_l_0_n_0_n) );
defparam Uadd_2_lut_l_0_n_0_n.IN_WIDTH = 38;
defparam Uadd_2_lut_l_0_n_0_n.PIPE_DEPTH = 3;
wire [38:0] tree_2_pp_l_0_n_1_n;
sadd_lpm_cen Uadd_2_lut_l_0_n_1_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_2_bit_2_fill), .bin(lut_2_bit_3_fill), .res(tree_2_pp_l_0_n_1_n) );
defparam Uadd_2_lut_l_0_n_1_n.IN_WIDTH = 38;
defparam Uadd_2_lut_l_0_n_1_n.PIPE_DEPTH = 3;
wire [38:0] tree_2_pp_l_0_n_2_n;
sadd_lpm_cen Uadd_2_lut_l_0_n_2_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_2_bit_4_fill), .bin(lut_2_bit_5_fill), .res(tree_2_pp_l_0_n_2_n) );
defparam Uadd_2_lut_l_0_n_2_n.IN_WIDTH = 38;
defparam Uadd_2_lut_l_0_n_2_n.PIPE_DEPTH = 3;
wire [38:0] tree_2_pp_l_0_n_3_n;
sadd_lpm_cen Uadd_2_lut_l_0_n_3_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_2_bit_6_fill), .bin(lut_2_bit_7_fill), .res(tree_2_pp_l_0_n_3_n) );
defparam Uadd_2_lut_l_0_n_3_n.IN_WIDTH = 38;
defparam Uadd_2_lut_l_0_n_3_n.PIPE_DEPTH = 3;
wire [38:0] tree_2_pp_l_0_n_4_n;
sadd_lpm_cen Uadd_2_lut_l_0_n_4_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_2_bit_8_fill), .bin(lut_2_bit_9_fill), .res(tree_2_pp_l_0_n_4_n) );
defparam Uadd_2_lut_l_0_n_4_n.IN_WIDTH = 38;
defparam Uadd_2_lut_l_0_n_4_n.PIPE_DEPTH = 3;
wire [38:0] tree_2_pp_l_0_n_5_n;
sadd_lpm_cen Uadd_2_lut_l_0_n_5_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_2_bit_10_fill), .bin(lut_2_bit_11_fill), .res(tree_2_pp_l_0_n_5_n) );
defparam Uadd_2_lut_l_0_n_5_n.IN_WIDTH = 38;
defparam Uadd_2_lut_l_0_n_5_n.PIPE_DEPTH = 3;
wire [38:0] tree_2_pp_l_0_n_6_n;
sadd_lpm_cen Uadd_2_lut_l_0_n_6_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_2_bit_12_fill), .bin(lut_2_bit_13_fill), .res(tree_2_pp_l_0_n_6_n) );
defparam Uadd_2_lut_l_0_n_6_n.IN_WIDTH = 38;
defparam Uadd_2_lut_l_0_n_6_n.PIPE_DEPTH = 3;
wire [38:0] tree_2_pp_l_0_n_7_n;
sadd_lpm_cen Uadd_2_lut_l_0_n_7_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_2_bit_14_fill), .bin(lut_2_bit_15_fill), .res(tree_2_pp_l_0_n_7_n) );
defparam Uadd_2_lut_l_0_n_7_n.IN_WIDTH = 38;
defparam Uadd_2_lut_l_0_n_7_n.PIPE_DEPTH = 3;
wire [38:0] tree_2_pp_l_0_n_8_n;
sadd_lpm_cen Uadd_2_lut_l_0_n_8_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_2_bit_16_fill), .bin(lut_2_bit_17_fill), .res(tree_2_pp_l_0_n_8_n) );
defparam Uadd_2_lut_l_0_n_8_n.IN_WIDTH = 38;
defparam Uadd_2_lut_l_0_n_8_n.PIPE_DEPTH = 3;
wire [38:0] tree_2_pp_l_0_n_9_n;
sadd_lpm_cen Uadd_2_lut_l_0_n_9_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_2_bit_18_fill), .bin(lut_2_bit_19_fill), .res(tree_2_pp_l_0_n_9_n) );
defparam Uadd_2_lut_l_0_n_9_n.IN_WIDTH = 38;
defparam Uadd_2_lut_l_0_n_9_n.PIPE_DEPTH = 3;
wire [38:0] tree_2_pp_l_0_n_10_n;
sadd_lpm_cen Uadd_2_lut_l_0_n_10_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_2_bit_20_fill), .bin(lut_2_bit_21_fill), .res(tree_2_pp_l_0_n_10_n) );
defparam Uadd_2_lut_l_0_n_10_n.IN_WIDTH = 38;
defparam Uadd_2_lut_l_0_n_10_n.PIPE_DEPTH = 3;
wire [38:0] tree_2_pp_l_0_n_11_n;
sadd_lpm_cen Uadd_2_lut_l_0_n_11_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_2_bit_22_fill), .bin(lut_2_bit_23_fill), .res(tree_2_pp_l_0_n_11_n) );
defparam Uadd_2_lut_l_0_n_11_n.IN_WIDTH = 38;
defparam Uadd_2_lut_l_0_n_11_n.PIPE_DEPTH = 3;

wire [39:0] tree_2_pp_l_1_n_0_n;
sadd_lpm_cen Uadd_2_lut_l_1_n_0_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_2_pp_l_0_n_0_n), .bin(tree_2_pp_l_0_n_1_n), .res(tree_2_pp_l_1_n_0_n) );
defparam Uadd_2_lut_l_1_n_0_n.IN_WIDTH = 39;
defparam Uadd_2_lut_l_1_n_0_n.PIPE_DEPTH = 3;
wire [39:0] tree_2_pp_l_1_n_1_n;
sadd_lpm_cen Uadd_2_lut_l_1_n_1_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_2_pp_l_0_n_2_n), .bin(tree_2_pp_l_0_n_3_n), .res(tree_2_pp_l_1_n_1_n) );
defparam Uadd_2_lut_l_1_n_1_n.IN_WIDTH = 39;
defparam Uadd_2_lut_l_1_n_1_n.PIPE_DEPTH = 3;
wire [39:0] tree_2_pp_l_1_n_2_n;
sadd_lpm_cen Uadd_2_lut_l_1_n_2_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_2_pp_l_0_n_4_n), .bin(tree_2_pp_l_0_n_5_n), .res(tree_2_pp_l_1_n_2_n) );
defparam Uadd_2_lut_l_1_n_2_n.IN_WIDTH = 39;
defparam Uadd_2_lut_l_1_n_2_n.PIPE_DEPTH = 3;
wire [39:0] tree_2_pp_l_1_n_3_n;
sadd_lpm_cen Uadd_2_lut_l_1_n_3_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_2_pp_l_0_n_6_n), .bin(tree_2_pp_l_0_n_7_n), .res(tree_2_pp_l_1_n_3_n) );
defparam Uadd_2_lut_l_1_n_3_n.IN_WIDTH = 39;
defparam Uadd_2_lut_l_1_n_3_n.PIPE_DEPTH = 3;
wire [39:0] tree_2_pp_l_1_n_4_n;
sadd_lpm_cen Uadd_2_lut_l_1_n_4_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_2_pp_l_0_n_8_n), .bin(tree_2_pp_l_0_n_9_n), .res(tree_2_pp_l_1_n_4_n) );
defparam Uadd_2_lut_l_1_n_4_n.IN_WIDTH = 39;
defparam Uadd_2_lut_l_1_n_4_n.PIPE_DEPTH = 3;
wire [39:0] tree_2_pp_l_1_n_5_n;
sadd_lpm_cen Uadd_2_lut_l_1_n_5_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_2_pp_l_0_n_10_n), .bin(tree_2_pp_l_0_n_11_n), .res(tree_2_pp_l_1_n_5_n) );
defparam Uadd_2_lut_l_1_n_5_n.IN_WIDTH = 39;
defparam Uadd_2_lut_l_1_n_5_n.PIPE_DEPTH = 3;

wire [40:0] tree_2_pp_l_2_n_0_n;
sadd_lpm_cen Uadd_2_lut_l_2_n_0_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_2_pp_l_1_n_0_n), .bin(tree_2_pp_l_1_n_1_n), .res(tree_2_pp_l_2_n_0_n) );
defparam Uadd_2_lut_l_2_n_0_n.IN_WIDTH = 40;
defparam Uadd_2_lut_l_2_n_0_n.PIPE_DEPTH = 3;
wire [40:0] tree_2_pp_l_2_n_1_n;
sadd_lpm_cen Uadd_2_lut_l_2_n_1_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_2_pp_l_1_n_2_n), .bin(tree_2_pp_l_1_n_3_n), .res(tree_2_pp_l_2_n_1_n) );
defparam Uadd_2_lut_l_2_n_1_n.IN_WIDTH = 40;
defparam Uadd_2_lut_l_2_n_1_n.PIPE_DEPTH = 3;
wire [40:0] tree_2_pp_l_2_n_2_n;
sadd_lpm_cen Uadd_2_lut_l_2_n_2_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_2_pp_l_1_n_4_n), .bin(tree_2_pp_l_1_n_5_n), .res(tree_2_pp_l_2_n_2_n) );
defparam Uadd_2_lut_l_2_n_2_n.IN_WIDTH = 40;
defparam Uadd_2_lut_l_2_n_2_n.PIPE_DEPTH = 3;

wire [41:0] tree_2_pp_l_3_n_0_n;
sadd_lpm_cen Uadd_2_lut_l_3_n_0_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_2_pp_l_2_n_0_n), .bin(tree_2_pp_l_2_n_1_n), .res(tree_2_pp_l_3_n_0_n) );
defparam Uadd_2_lut_l_3_n_0_n.IN_WIDTH = 41;
defparam Uadd_2_lut_l_3_n_0_n.PIPE_DEPTH = 3;
wire [41:0] tree_2_pp_l_3_n_1_n;
sadd_lpm_cen Uadd_2_lut_l_3_n_1_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_2_pp_l_2_n_2_n), .bin(41'd0), .res(tree_2_pp_l_3_n_1_n) );
defparam Uadd_2_lut_l_3_n_1_n.IN_WIDTH = 41;
defparam Uadd_2_lut_l_3_n_1_n.PIPE_DEPTH = 3;

wire [42:0] tree_2_pp_l_4_n_0_n;
sadd_lpm_cen Uadd_2_lut_l_4_n_0_n (.clk(clk),  .gclk_en(clk_en), .ain(tree_2_pp_l_3_n_0_n), .bin(tree_2_pp_l_3_n_1_n), .res(tree_2_pp_l_4_n_0_n) );
defparam Uadd_2_lut_l_4_n_0_n.IN_WIDTH = 42;
defparam Uadd_2_lut_l_4_n_0_n.PIPE_DEPTH = 3;

wire [42:0] lut_val_2_n;
assign lut_val_2_n=tree_2_pp_l_4_n_0_n;


// ---- final adder tree ----

wire [43:0] fin_atree_l_0_n_0_n;
sadd_lpm_cen Uadd_cen_l_0_n_0_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_val_0_n), .bin(lut_val_1_n), .res(fin_atree_l_0_n_0_n) );
defparam Uadd_cen_l_0_n_0_n.IN_WIDTH = 43;
defparam Uadd_cen_l_0_n_0_n.PIPE_DEPTH = 3;
wire [43:0] fin_atree_l_0_n_1_n;
sadd_lpm_cen Uadd_cen_l_0_n_1_n (.clk(clk),  .gclk_en(clk_en), .ain(lut_val_2_n), .bin(43'd0), .res(fin_atree_l_0_n_1_n) );
defparam Uadd_cen_l_0_n_1_n.IN_WIDTH = 43;
defparam Uadd_cen_l_0_n_1_n.PIPE_DEPTH = 3;

wire [44:0] fin_atree_l_1_n_0_n;
sadd_lpm_cen Uadd_cen_l_1_n_0_n (.clk(clk),  .gclk_en(clk_en), .ain(fin_atree_l_0_n_0_n), .bin(fin_atree_l_0_n_1_n), .res(fin_atree_l_1_n_0_n) );
defparam Uadd_cen_l_1_n_0_n.IN_WIDTH = 44;
defparam Uadd_cen_l_1_n_0_n.PIPE_DEPTH = 3;

wire [44:0] mac_res;
assign mac_res=fin_atree_l_1_n_0_n;
wire [44:0] atree_res;
mac_tl Umtl (.clk(clk), 
             .data_in(mac_res),
             .data_out(atree_res));
defparam Umtl.DATA_WIDTH = 45;

// ---- Adder Tree Complete ---- 
wire [39:0] fir_int_res;
assign fir_int_res = atree_res [39:0];

assign fir_result = fir_int_res[ACCUM_WIDTH-1:0];
wire pre_rdy;
assign rdy_to_ld = pre_rdy;
assign done = done_int;
par_ctrl Uctrl(.rst(rst),
		.clk(clk),
		.clk_en(clk_en),
		.done(done_int),
		.rdy_int(rdy_int),
		.input_ch_id(input_ch_id),
		.output_ch_id(output_ch_id),
		.rdy_to_ld(pre_rdy));
defparam Uctrl.REG_LEN = 26;
defparam Uctrl.REG_BIT = 5;
defparam Uctrl.CH_WIDTH =2; 
defparam Uctrl.NUM_CH =3; 
endmodule
